{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nvar ButtonWrapper = function ButtonWrapper(props) {\n  var style = {\n    alignSelf: 'center',\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative'\n  };\n\n  if (props.fit) {\n    style.width = '100%';\n    style.justifyContent = 'center';\n  }\n\n  var optionalProps = {};\n\n  if (props.onClick) {\n    optionalProps.onClick = props.onClick;\n  }\n\n  return React.createElement('span', _extends({\n    style: style\n  }, optionalProps), props.children);\n};\n\nexport default ButtonWrapper;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/button/dist/esm/styled/ButtonWrapper.js"],"names":["_extends","React","ButtonWrapper","props","style","alignSelf","display","flexWrap","maxWidth","position","fit","width","justifyContent","optionalProps","onClick","createElement","children"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,MAAIC,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,OAAO,EAAE,aAFC;AAGVC,IAAAA,QAAQ,EAAE,QAHA;AAIVC,IAAAA,QAAQ,EAAE,MAJA;AAKVC,IAAAA,QAAQ,EAAE;AALA,GAAZ;;AAOA,MAAIN,KAAK,CAACO,GAAV,EAAe;AACbN,IAAAA,KAAK,CAACO,KAAN,GAAc,MAAd;AACAP,IAAAA,KAAK,CAACQ,cAAN,GAAuB,QAAvB;AACD;;AAED,MAAIC,aAAa,GAAG,EAApB;;AACA,MAAIV,KAAK,CAACW,OAAV,EAAmB;AACjBD,IAAAA,aAAa,CAACC,OAAd,GAAwBX,KAAK,CAACW,OAA9B;AACD;;AACD,SAAOb,KAAK,CAACc,aAAN,CACL,MADK,EAELf,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAEA;AAAT,GAAD,EAAmBS,aAAnB,CAFH,EAGLV,KAAK,CAACa,QAHD,CAAP;AAKD,CAtBD;;AAwBA,eAAed,aAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nvar ButtonWrapper = function ButtonWrapper(props) {\n  var style = {\n    alignSelf: 'center',\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative'\n  };\n  if (props.fit) {\n    style.width = '100%';\n    style.justifyContent = 'center';\n  }\n\n  var optionalProps = {};\n  if (props.onClick) {\n    optionalProps.onClick = props.onClick;\n  }\n  return React.createElement(\n    'span',\n    _extends({ style: style }, optionalProps),\n    props.children\n  );\n};\n\nexport default ButtonWrapper;"]},"metadata":{},"sourceType":"module"}