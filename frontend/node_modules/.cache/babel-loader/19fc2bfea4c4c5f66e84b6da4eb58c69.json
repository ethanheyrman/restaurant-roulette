{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport { gridSize } from '@atlaskit/theme/constants';\nexport var groupItemStyles = {\n  flex: '1 0 auto',\n  display: 'flex',\n\n  /* margins don't flip when the layout uses dir=\"rtl\", whereas pseudos do */\n  '& + &::before': {\n    content: \"''\",\n    display: 'inline-block',\n    width: gridSize() / 2 + \"px\"\n  }\n};\n\nvar ButtonGroup =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ButtonGroup, _super);\n\n  function ButtonGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ButtonGroup.prototype.render = function () {\n    var _a = this.props,\n        appearance = _a.appearance,\n        children = _a.children;\n    return jsx(\"div\", {\n      css: {\n        display: 'inline-flex'\n      }\n    }, React.Children.map(children, function (child, idx) {\n      if (!child) {\n        return null;\n      }\n\n      return jsx(\"div\", {\n        key: idx,\n        css: groupItemStyles\n      }, appearance ? React.cloneElement(child, {\n        appearance: appearance\n      }) : child);\n    }));\n  };\n\n  return ButtonGroup;\n}(React.Component);\n\nexport default ButtonGroup;","map":{"version":3,"sources":["../src/components/ButtonGroup.tsx"],"names":[],"mappings":";AAAA;;AACA,SAAS,GAAT,QAAoB,eAApB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,2BAAzB;AAQA,OAAO,IAAM,eAAe,GAAG;AAC7B,EAAA,IAAI,EAAE,UADuB;AAE7B,EAAA,OAAO,EAAE,MAFoB;;AAI7B;AACA,mBAAiB;AACf,IAAA,OAAO,EAAE,IADM;AAEf,IAAA,OAAO,EAAE,cAFM;AAGf,IAAA,KAAK,EAAK,QAAQ,KAAK,CAAb,GAAc;AAHT;AALY,CAAxB;;AAYP,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAzC,WAAA,WAAA,GAAA;;AAqBC;;AApBC,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,UAAA,GAAA,EAAA,CAAA,UAAF;AAAA,QAAc,QAAA,GAAA,EAAA,CAAA,QAAd;AAEN,WACE,GAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAE;AAAE,QAAA,OAAO,EAAE;AAAX;AAAV,KAAA,EACG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAC,KAAD,EAAQ,GAAR,EAAW;AACvC,UAAI,CAAC,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AACD,aACE,GAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE,GAAV;AAAe,QAAA,GAAG,EAAE;AAApB,OAAA,EACG,UAAU,GACP,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAyC;AAAE,QAAA,UAAU,EAAA;AAAZ,OAAzC,CADO,GAEP,KAHN,CADF;AAOD,KAXA,CADH,CADF;AAgBD,GAnBD;;AAoBF,SAAA,WAAA;AAAC,CArBD,CAAyC,KAAK,CAAC,SAA/C,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport { gridSize } from '@atlaskit/theme/constants';\nexport var groupItemStyles = {\n    flex: '1 0 auto',\n    display: 'flex',\n    /* margins don't flip when the layout uses dir=\"rtl\", whereas pseudos do */\n    '& + &::before': {\n        content: \"''\",\n        display: 'inline-block',\n        width: gridSize() / 2 + \"px\",\n    },\n};\nvar ButtonGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(ButtonGroup, _super);\n    function ButtonGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonGroup.prototype.render = function () {\n        var _a = this.props, appearance = _a.appearance, children = _a.children;\n        return (jsx(\"div\", { css: { display: 'inline-flex' } }, React.Children.map(children, function (child, idx) {\n            if (!child) {\n                return null;\n            }\n            return (jsx(\"div\", { key: idx, css: groupItemStyles }, appearance\n                ? React.cloneElement(child, { appearance: appearance })\n                : child));\n        })));\n    };\n    return ButtonGroup;\n}(React.Component));\nexport default ButtonGroup;\n//# sourceMappingURL=ButtonGroup.js.map"]},"metadata":{},"sourceType":"module"}