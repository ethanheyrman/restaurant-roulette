{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nexport default (function (_ref) {\n  var children = _ref.children,\n      props = _ref.props,\n      theme = _ref.theme;\n  var appearance = _typeof(props) === 'object' ? 'default' : props;\n  var merged = _typeof(props) === 'object' ? _objectSpread({}, props) : {};\n  Object.keys(theme).forEach(function (key) {\n    if (!(key in merged)) {\n      merged[key] = theme[key]({\n        appearance: appearance\n      });\n    }\n  });\n  return children(merged);\n});","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/datetime-picker/node_modules/@atlaskit/icon/node_modules/@atlaskit/theme/components/Appearance.js"],"names":["_objectSpread","_typeof","_ref","children","props","theme","appearance","merged","Object","keys","forEach","key"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,gBAAgB,UAAUC,IAAV,EAAgB;AAC9B,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAGA,MAAIC,UAAU,GAAGL,OAAO,CAACG,KAAD,CAAP,KAAmB,QAAnB,GAA8B,SAA9B,GAA0CA,KAA3D;AACA,MAAIG,MAAM,GAAGN,OAAO,CAACG,KAAD,CAAP,KAAmB,QAAnB,GAA8BJ,aAAa,CAAC,EAAD,EAAKI,KAAL,CAA3C,GAAyD,EAAtE;AACAI,EAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACxC,QAAI,EAAEA,GAAG,IAAIJ,MAAT,CAAJ,EAAsB;AACpBA,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcN,KAAK,CAACM,GAAD,CAAL,CAAW;AACvBL,QAAAA,UAAU,EAAEA;AADW,OAAX,CAAd;AAGD;AACF,GAND;AAOA,SAAOH,QAAQ,CAACI,MAAD,CAAf;AACD,CAdD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nexport default (function (_ref) {\n  var children = _ref.children,\n      props = _ref.props,\n      theme = _ref.theme;\n  var appearance = _typeof(props) === 'object' ? 'default' : props;\n  var merged = _typeof(props) === 'object' ? _objectSpread({}, props) : {};\n  Object.keys(theme).forEach(function (key) {\n    if (!(key in merged)) {\n      merged[key] = theme[key]({\n        appearance: appearance\n      });\n    }\n  });\n  return children(merged);\n});"]},"metadata":{},"sourceType":"module"}