{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion } from '../version.json';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { Theme } from '../theme';\nimport { mapAttributesToState, filterProps, composeRefs } from './utils';\nimport Content from './Content';\nimport InnerWrapper from './InnerWrapper';\nimport IconWrapper from './IconWrapper';\nimport LoadingSpinner from './LoadingSpinner';\n\nvar Button =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Button, _super);\n\n  function Button() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // ref can be a range of things because we render button, a, span or other React components\n\n\n    _this.button = React.createRef(); // Makes sure we don't call ref every render.\n\n    _this.getComposedRefs = memoize(composeRefs);\n    _this.state = {\n      isActive: false,\n      isFocus: false,\n      isHover: false\n    };\n\n    _this.isInteractive = function () {\n      return !_this.props.isDisabled && !_this.props.isLoading;\n    };\n\n    _this.onMouseEnter = function (e) {\n      _this.setState({\n        isHover: true\n      });\n\n      if (_this.props.onMouseEnter) {\n        _this.props.onMouseEnter(e);\n      }\n    };\n\n    _this.onMouseLeave = function (e) {\n      _this.setState({\n        isHover: false,\n        isActive: false\n      });\n\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n    };\n\n    _this.onMouseDown = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isActive: true\n      });\n\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(e);\n      }\n    };\n\n    _this.onMouseUp = function (e) {\n      _this.setState({\n        isActive: false\n      });\n\n      if (_this.props.onMouseUp) {\n        _this.props.onMouseUp(e);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      _this.setState({\n        isFocus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      _this.setState({\n        isFocus: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.getElement = function () {\n      var _a = _this.props,\n          href = _a.href,\n          isDisabled = _a.isDisabled;\n\n      if (href) {\n        return isDisabled ? 'span' : 'a';\n      }\n\n      return 'button';\n    }; // Swallow click events when the button is disabled\n    // to prevent inner child clicks bubbling up.\n\n\n    _this.onInnerClick = function (e) {\n      if (!_this.isInteractive()) {\n        e.stopPropagation();\n      }\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  Button.prototype.componentDidMount = function () {\n    if (this.props.autoFocus && this.button instanceof HTMLButtonElement) {\n      this.button.focus();\n    }\n  };\n\n  Button.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.appearance,\n        appearance = _b === void 0 ? 'default' : _b,\n        children = _a.children,\n        className = _a.className,\n        CustomComponent = _a.component,\n        consumerRef = _a.consumerRef,\n        iconAfter = _a.iconAfter,\n        iconBefore = _a.iconBefore,\n        _c = _a.isDisabled,\n        isDisabled = _c === void 0 ? false : _c,\n        _d = _a.isLoading,\n        isLoading = _d === void 0 ? false : _d,\n        _e = _a.isSelected,\n        isSelected = _e === void 0 ? false : _e,\n        _f = _a.shouldFitContainer,\n        shouldFitContainer = _f === void 0 ? false : _f,\n        _g = _a.spacing,\n        spacing = _g === void 0 ? 'default' : _g,\n        _h = _a.theme,\n        theme = _h === void 0 ? function (current, props) {\n      return current(props);\n    } : _h,\n        rest = tslib_1.__rest(_a, [\"appearance\", \"children\", \"className\", \"component\", \"consumerRef\", \"iconAfter\", \"iconBefore\", \"isDisabled\", \"isLoading\", \"isSelected\", \"shouldFitContainer\", \"spacing\", \"theme\"]);\n\n    var attributes = tslib_1.__assign({}, this.state, {\n      isSelected: isSelected,\n      isDisabled: isDisabled\n    });\n\n    var StyledButton = CustomComponent || this.getElement();\n    var iconIsOnlyChild = !!(iconBefore && !iconAfter && !children || iconAfter && !iconBefore && !children);\n\n    var specifiers = function (styles) {\n      if (StyledButton === 'a') {\n        return {\n          'a&': styles\n        };\n      } else if (StyledButton === CustomComponent) {\n        return {\n          '&, a&, &:hover, &:active, &:focus': styles\n        };\n      }\n\n      return styles;\n    };\n\n    return jsx(Theme.Provider, {\n      value: theme\n    }, jsx(GlobalTheme.Consumer, null, function (_a) {\n      var mode = _a.mode;\n      return jsx(Theme.Consumer, tslib_1.__assign({\n        mode: mode,\n        state: mapAttributesToState(attributes),\n        iconIsOnlyChild: iconIsOnlyChild\n      }, _this.props), function (_a) {\n        var buttonStyles = _a.buttonStyles,\n            spinnerStyles = _a.spinnerStyles;\n        return jsx(StyledButton, tslib_1.__assign({}, filterProps(rest, StyledButton), {\n          ref: _this.getComposedRefs(_this.button, consumerRef),\n          onMouseEnter: _this.onMouseEnter,\n          onMouseLeave: _this.onMouseLeave,\n          onMouseDown: _this.onMouseDown,\n          onMouseUp: _this.onMouseUp,\n          onFocus: _this.onFocus,\n          onBlur: _this.onBlur,\n          disabled: isDisabled,\n          className: className,\n          css: specifiers(buttonStyles)\n        }), jsx(InnerWrapper, {\n          onClick: _this.onInnerClick,\n          fit: !!shouldFitContainer\n        }, isLoading && jsx(LoadingSpinner, {\n          spacing: spacing,\n          appearance: appearance,\n          isSelected: isSelected,\n          isDisabled: isDisabled,\n          styles: spinnerStyles\n        }), iconBefore && jsx(IconWrapper, {\n          isLoading: isLoading,\n          spacing: spacing,\n          isOnlyChild: iconIsOnlyChild,\n          icon: iconBefore\n        }), children && jsx(Content, {\n          isLoading: isLoading,\n          followsIcon: !!iconBefore,\n          spacing: spacing\n        }, children), iconAfter && jsx(IconWrapper, {\n          isLoading: isLoading,\n          spacing: spacing,\n          isOnlyChild: iconIsOnlyChild,\n          icon: iconAfter\n        })));\n      });\n    }));\n  };\n\n  Button.defaultProps = {\n    appearance: 'default',\n    autoFocus: false,\n    isDisabled: false,\n    isLoading: false,\n    isSelected: false,\n    shouldFitContainer: false,\n    spacing: 'default',\n    theme: function (current, props) {\n      return current(props);\n    },\n    type: 'button'\n  };\n  return Button;\n}(React.Component);\n\nexport { Button };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nvar ButtonWithRef = React.forwardRef(function (props, ref) {\n  return jsx(Button, tslib_1.__assign({}, props, {\n    consumerRef: ref\n  }));\n});\nButtonWithRef.displayName = 'Button'; // @ts-ignore\n\nexport default withAnalyticsContext({\n  componentName: 'button',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onClick: createAndFireEventOnAtlaskit({\n    action: 'clicked',\n    actionSubject: 'button',\n    attributes: {\n      componentName: 'button',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  })\n})(ButtonWithRef));","map":{"version":3,"sources":["../src/components/Button.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent, } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion, } from '../version.json';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { Theme } from '../theme';\nimport { mapAttributesToState, filterProps, composeRefs } from './utils';\nimport Content from './Content';\nimport InnerWrapper from './InnerWrapper';\nimport IconWrapper from './IconWrapper';\nimport LoadingSpinner from './LoadingSpinner';\nvar Button = /** @class */ (function (_super) {\n    tslib_1.__extends(Button, _super);\n    function Button() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // ref can be a range of things because we render button, a, span or other React components\n        _this.button = React.createRef();\n        // Makes sure we don't call ref every render.\n        _this.getComposedRefs = memoize(composeRefs);\n        _this.state = {\n            isActive: false,\n            isFocus: false,\n            isHover: false,\n        };\n        _this.isInteractive = function () { return !_this.props.isDisabled && !_this.props.isLoading; };\n        _this.onMouseEnter = function (e) {\n            _this.setState({ isHover: true });\n            if (_this.props.onMouseEnter) {\n                _this.props.onMouseEnter(e);\n            }\n        };\n        _this.onMouseLeave = function (e) {\n            _this.setState({ isHover: false, isActive: false });\n            if (_this.props.onMouseLeave) {\n                _this.props.onMouseLeave(e);\n            }\n        };\n        _this.onMouseDown = function (e) {\n            e.preventDefault();\n            _this.setState({ isActive: true });\n            if (_this.props.onMouseDown) {\n                _this.props.onMouseDown(e);\n            }\n        };\n        _this.onMouseUp = function (e) {\n            _this.setState({ isActive: false });\n            if (_this.props.onMouseUp) {\n                _this.props.onMouseUp(e);\n            }\n        };\n        _this.onFocus = function (event) {\n            _this.setState({ isFocus: true });\n            if (_this.props.onFocus) {\n                _this.props.onFocus(event);\n            }\n        };\n        _this.onBlur = function (event) {\n            _this.setState({ isFocus: false });\n            if (_this.props.onBlur) {\n                _this.props.onBlur(event);\n            }\n        };\n        _this.getElement = function () {\n            var _a = _this.props, href = _a.href, isDisabled = _a.isDisabled;\n            if (href) {\n                return isDisabled ? 'span' : 'a';\n            }\n            return 'button';\n        };\n        // Swallow click events when the button is disabled\n        // to prevent inner child clicks bubbling up.\n        _this.onInnerClick = function (e) {\n            if (!_this.isInteractive()) {\n                e.stopPropagation();\n            }\n            return true;\n        };\n        return _this;\n    }\n    Button.prototype.componentDidMount = function () {\n        if (this.props.autoFocus && this.button instanceof HTMLButtonElement) {\n            this.button.focus();\n        }\n    };\n    Button.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, children = _a.children, className = _a.className, CustomComponent = _a.component, consumerRef = _a.consumerRef, iconAfter = _a.iconAfter, iconBefore = _a.iconBefore, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isLoading, isLoading = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, _f = _a.shouldFitContainer, shouldFitContainer = _f === void 0 ? false : _f, _g = _a.spacing, spacing = _g === void 0 ? 'default' : _g, _h = _a.theme, theme = _h === void 0 ? function (current, props) { return current(props); } : _h, rest = tslib_1.__rest(_a, [\"appearance\", \"children\", \"className\", \"component\", \"consumerRef\", \"iconAfter\", \"iconBefore\", \"isDisabled\", \"isLoading\", \"isSelected\", \"shouldFitContainer\", \"spacing\", \"theme\"]);\n        var attributes = tslib_1.__assign({}, this.state, { isSelected: isSelected, isDisabled: isDisabled });\n        var StyledButton = CustomComponent || this.getElement();\n        var iconIsOnlyChild = !!((iconBefore && !iconAfter && !children) ||\n            (iconAfter && !iconBefore && !children));\n        var specifiers = function (styles) {\n            if (StyledButton === 'a') {\n                return {\n                    'a&': styles,\n                };\n            }\n            else if (StyledButton === CustomComponent) {\n                return {\n                    '&, a&, &:hover, &:active, &:focus': styles,\n                };\n            }\n            return styles;\n        };\n        return (jsx(Theme.Provider, { value: theme },\n            jsx(GlobalTheme.Consumer, null, function (_a) {\n                var mode = _a.mode;\n                return (jsx(Theme.Consumer, tslib_1.__assign({ mode: mode, state: mapAttributesToState(attributes), iconIsOnlyChild: iconIsOnlyChild }, _this.props), function (_a) {\n                    var buttonStyles = _a.buttonStyles, spinnerStyles = _a.spinnerStyles;\n                    return (jsx(StyledButton, tslib_1.__assign({}, filterProps(rest, StyledButton), { ref: _this.getComposedRefs(_this.button, consumerRef), onMouseEnter: _this.onMouseEnter, onMouseLeave: _this.onMouseLeave, onMouseDown: _this.onMouseDown, onMouseUp: _this.onMouseUp, onFocus: _this.onFocus, onBlur: _this.onBlur, disabled: isDisabled, className: className, css: specifiers(buttonStyles) }),\n                        jsx(InnerWrapper, { onClick: _this.onInnerClick, fit: !!shouldFitContainer },\n                            isLoading && (jsx(LoadingSpinner, { spacing: spacing, appearance: appearance, isSelected: isSelected, isDisabled: isDisabled, styles: spinnerStyles })),\n                            iconBefore && (jsx(IconWrapper, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconBefore })),\n                            children && (jsx(Content, { isLoading: isLoading, followsIcon: !!iconBefore, spacing: spacing }, children)),\n                            iconAfter && (jsx(IconWrapper, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconAfter })))));\n                }));\n            })));\n    };\n    Button.defaultProps = {\n        appearance: 'default',\n        autoFocus: false,\n        isDisabled: false,\n        isLoading: false,\n        isSelected: false,\n        shouldFitContainer: false,\n        spacing: 'default',\n        theme: function (current, props) { return current(props); },\n        type: 'button',\n    };\n    return Button;\n}(React.Component));\nexport { Button };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nvar ButtonWithRef = React.forwardRef(function (props, ref) { return jsx(Button, tslib_1.__assign({}, props, { consumerRef: ref })); });\nButtonWithRef.displayName = 'Button';\n// @ts-ignore\nexport default withAnalyticsContext({\n    componentName: 'button',\n    packageName: packageName,\n    packageVersion: packageVersion,\n})(withAnalyticsEvents({\n    onClick: createAndFireEventOnAtlaskit({\n        action: 'clicked',\n        actionSubject: 'button',\n        attributes: {\n            componentName: 'button',\n            packageName: packageName,\n            packageVersion: packageVersion,\n        },\n    }),\n})(ButtonWithRef));\n//# sourceMappingURL=Button.js.map"]},"metadata":{},"sourceType":"module"}