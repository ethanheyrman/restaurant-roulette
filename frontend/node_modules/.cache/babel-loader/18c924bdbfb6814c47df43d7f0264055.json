{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar AnalyticsEvent = /*#__PURE__*/function () {\n  function AnalyticsEvent(props) {\n    var _this = this;\n\n    _classCallCheck(this, AnalyticsEvent);\n\n    _defineProperty(this, \"payload\", void 0);\n\n    _defineProperty(this, \"clone\", function () {\n      // We stringify and parse here to get a hacky \"deep clone\" of the object.\n      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,\n      // but none of those need to be represented in our payload, so we consider this fine\n      var payload = JSON.parse(JSON.stringify(_this.payload));\n      return new AnalyticsEvent({\n        payload: payload\n      });\n    });\n\n    this.payload = props.payload;\n  }\n\n  _createClass(AnalyticsEvent, [{\n    key: \"update\",\n    value: function update(updater) {\n      if (typeof updater === 'function') {\n        this.payload = updater(this.payload);\n      } else if (_typeof(updater) === 'object') {\n        this.payload = _objectSpread({}, this.payload, updater);\n      }\n\n      return this;\n    }\n  }]);\n\n  return AnalyticsEvent;\n}();\n\nexport { AnalyticsEvent as default };","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/analytics-next/dist/esm/AnalyticsEvent.js"],"names":["_objectSpread","_typeof","_classCallCheck","_createClass","_defineProperty","AnalyticsEvent","props","_this","payload","JSON","parse","stringify","key","value","update","updater","default"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAEA,IAAIC,cAAc,GAClB,aACA,YAAY;AACV,WAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAIC,KAAK,GAAG,IAAZ;;AAEAL,IAAAA,eAAe,CAAC,IAAD,EAAOG,cAAP,CAAf;;AAEAD,IAAAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,KAAK,CAAvB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,YAAY;AACzC;AACA;AACA;AACA,UAAII,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,KAAK,CAACC,OAArB,CAAX,CAAd;AACA,aAAO,IAAIH,cAAJ,CAAmB;AACxBG,QAAAA,OAAO,EAAEA;AADe,OAAnB,CAAP;AAGD,KARc,CAAf;;AAUA,SAAKA,OAAL,GAAeF,KAAK,CAACE,OAArB;AACD;;AAEDL,EAAAA,YAAY,CAACE,cAAD,EAAiB,CAAC;AAC5BO,IAAAA,GAAG,EAAE,QADuB;AAE5BC,IAAAA,KAAK,EAAE,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AAC9B,UAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,aAAKP,OAAL,GAAeO,OAAO,CAAC,KAAKP,OAAN,CAAtB;AACD,OAFD,MAEO,IAAIP,OAAO,CAACc,OAAD,CAAP,KAAqB,QAAzB,EAAmC;AACxC,aAAKP,OAAL,GAAeR,aAAa,CAAC,EAAD,EAAK,KAAKQ,OAAV,EAAmBO,OAAnB,CAA5B;AACD;;AAED,aAAO,IAAP;AACD;AAV2B,GAAD,CAAjB,CAAZ;;AAaA,SAAOV,cAAP;AACD,CAnCD,EAFA;;AAuCA,SAASA,cAAc,IAAIW,OAA3B","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar AnalyticsEvent =\n/*#__PURE__*/\nfunction () {\n  function AnalyticsEvent(props) {\n    var _this = this;\n\n    _classCallCheck(this, AnalyticsEvent);\n\n    _defineProperty(this, \"payload\", void 0);\n\n    _defineProperty(this, \"clone\", function () {\n      // We stringify and parse here to get a hacky \"deep clone\" of the object.\n      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,\n      // but none of those need to be represented in our payload, so we consider this fine\n      var payload = JSON.parse(JSON.stringify(_this.payload));\n      return new AnalyticsEvent({\n        payload: payload\n      });\n    });\n\n    this.payload = props.payload;\n  }\n\n  _createClass(AnalyticsEvent, [{\n    key: \"update\",\n    value: function update(updater) {\n      if (typeof updater === 'function') {\n        this.payload = updater(this.payload);\n      } else if (_typeof(updater) === 'object') {\n        this.payload = _objectSpread({}, this.payload, updater);\n      }\n\n      return this;\n    }\n  }]);\n\n  return AnalyticsEvent;\n}();\n\nexport { AnalyticsEvent as default };"]},"metadata":{},"sourceType":"module"}