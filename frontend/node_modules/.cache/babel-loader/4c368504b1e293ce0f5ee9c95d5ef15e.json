{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { codeFontFamily, colors, fontSize } from '@atlaskit/theme';\n\nvar getPlaceholderStyle = function getPlaceholderStyle(style) {\n  return css([\"\\n  &::-webkit-input-placeholder {\\n    /* WebKit, Blink, Edge */\\n    \", \";\\n  }\\n  &::-moz-placeholder {\\n    /* Mozilla Firefox 19+ */\\n    \", \" opacity: 1;\\n  }\\n  &::-ms-input-placeholder {\\n    /* Microsoft Edge */\\n    \", \";\\n  }\\n  &:-moz-placeholder {\\n    /* Mozilla Firefox 4 to 18 */\\n    \", \" opacity: 1;\\n  }\\n  &:-ms-input-placeholder {\\n    /* Internet Explorer 10-11 */\\n    \", \";\\n  }\\n\"], style, style, style, style, style);\n};\n\nvar getPlaceholderColor = css([\"\\n  color: \", \";\\n\"], colors.placeholderText); // Safari puts on some difficult to remove styles, mainly for disabled inputs\n// but we want full control so need to override them in all cases\n\nvar overrideSafariDisabledStyles = \"\\n  -webkit-text-fill-color: unset;\\n  -webkit-opacity: 1;\\n\";\n\nvar getMinimumRowsHeight = function getMinimumRowsHeight(_ref) {\n  var minimumRows = _ref.minimumRows;\n  return \"min-height: \".concat(20 * minimumRows, \"px;\");\n};\n\nvar getResizeStyles = function getResizeStyles(_ref2) {\n  var enableResize = _ref2.enableResize;\n\n  if (!enableResize) {\n    return \"resize: none;\";\n  }\n\n  if (enableResize === 'horizontal') {\n    return \"resize: horizontal;\";\n  }\n\n  if (enableResize === 'vertical') {\n    return \"resize: vertical;\";\n  }\n\n  return null;\n};\n\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"TextArea\",\n  componentId: \"l4fqfr-0\"\n})([\"\\n  background: transparent;\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  box-sizing: border-box;\\n  color: inherit;\\n  cursor: inherit;\\n  font-family: \", \";\\n  font-size: \", \"px;\\n  line-height: \", \";\\n  min-width: 0;\\n  outline: none;\\n  width: 100%;\\n\\n  [disabled] {\\n    \", \";\\n  }\\n\\n  \", \" \", \"\\n\\n  &::-ms-clear {\\n    display: none;\\n  }\\n\\n  &:invalid {\\n    box-shadow: none;\\n  }\\n\\n  \", \";\\n\"], function (p) {\n  return p.isMonospaced ? codeFontFamily() : 'inherit';\n}, fontSize, 20 / fontSize(), overrideSafariDisabledStyles, getMinimumRowsHeight, getResizeStyles, getPlaceholderStyle(getPlaceholderColor));\nexport default TextArea;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/field-text-area/dist/esm/styled/TextArea.js"],"names":["styled","css","codeFontFamily","colors","fontSize","getPlaceholderStyle","style","getPlaceholderColor","placeholderText","overrideSafariDisabledStyles","getMinimumRowsHeight","_ref","minimumRows","concat","getResizeStyles","_ref2","enableResize","TextArea","textarea","withConfig","displayName","componentId","p","isMonospaced"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,cAAT,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,iBAAjD;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5D,SAAOL,GAAG,CAAC,CAAC,yEAAD,EAA4E,sEAA5E,EAAoJ,iFAApJ,EAAuO,yEAAvO,EAAkT,yFAAlT,EAA6Y,UAA7Y,CAAD,EAA2ZK,KAA3Z,EAAkaA,KAAla,EAAyaA,KAAza,EAAgbA,KAAhb,EAAubA,KAAvb,CAAV;AACD,CAFD;;AAIA,IAAIC,mBAAmB,GAAGN,GAAG,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD,EAAyBE,MAAM,CAACK,eAAhC,CAA7B,C,CAA+E;AAC/E;;AAEA,IAAIC,4BAA4B,GAAG,8DAAnC;;AAEA,IAAIC,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AAC7D,MAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACA,SAAO,eAAeC,MAAf,CAAsB,KAAKD,WAA3B,EAAwC,KAAxC,CAAP;AACD,CAHD;;AAKA,IAAIE,eAAe,GAAG,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AACpD,MAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;;AAEA,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAO,eAAP;AACD;;AAED,MAAIA,YAAY,KAAK,YAArB,EAAmC;AACjC,WAAO,qBAAP;AACD;;AAED,MAAIA,YAAY,KAAK,UAArB,EAAiC;AAC/B,WAAO,mBAAP;AACD;;AAED,SAAO,IAAP;AACD,CAhBD;;AAkBA,IAAIC,QAAQ,GAAGjB,MAAM,CAACkB,QAAP,CAAgBC,UAAhB,CAA2B;AACxCC,EAAAA,WAAW,EAAE,UAD2B;AAExCC,EAAAA,WAAW,EAAE;AAF2B,CAA3B,EAGZ,CAAC,4JAAD,EAA+J,kBAA/J,EAAmL,sBAAnL,EAA2M,8EAA3M,EAA2R,cAA3R,EAA2S,GAA3S,EAAgT,kGAAhT,EAAoZ,KAApZ,CAHY,EAGgZ,UAAUC,CAAV,EAAa;AAC1a,SAAOA,CAAC,CAACC,YAAF,GAAiBrB,cAAc,EAA/B,GAAoC,SAA3C;AACD,CALc,EAKZE,QALY,EAKF,KAAKA,QAAQ,EALX,EAKeK,4BALf,EAK6CC,oBAL7C,EAKmEI,eALnE,EAKoFT,mBAAmB,CAACE,mBAAD,CALvG,CAAf;AAMA,eAAeU,QAAf","sourcesContent":["import styled, { css } from 'styled-components';\nimport { codeFontFamily, colors, fontSize } from '@atlaskit/theme';\n\nvar getPlaceholderStyle = function getPlaceholderStyle(style) {\n  return css([\"\\n  &::-webkit-input-placeholder {\\n    /* WebKit, Blink, Edge */\\n    \", \";\\n  }\\n  &::-moz-placeholder {\\n    /* Mozilla Firefox 19+ */\\n    \", \" opacity: 1;\\n  }\\n  &::-ms-input-placeholder {\\n    /* Microsoft Edge */\\n    \", \";\\n  }\\n  &:-moz-placeholder {\\n    /* Mozilla Firefox 4 to 18 */\\n    \", \" opacity: 1;\\n  }\\n  &:-ms-input-placeholder {\\n    /* Internet Explorer 10-11 */\\n    \", \";\\n  }\\n\"], style, style, style, style, style);\n};\n\nvar getPlaceholderColor = css([\"\\n  color: \", \";\\n\"], colors.placeholderText); // Safari puts on some difficult to remove styles, mainly for disabled inputs\n// but we want full control so need to override them in all cases\n\nvar overrideSafariDisabledStyles = \"\\n  -webkit-text-fill-color: unset;\\n  -webkit-opacity: 1;\\n\";\n\nvar getMinimumRowsHeight = function getMinimumRowsHeight(_ref) {\n  var minimumRows = _ref.minimumRows;\n  return \"min-height: \".concat(20 * minimumRows, \"px;\");\n};\n\nvar getResizeStyles = function getResizeStyles(_ref2) {\n  var enableResize = _ref2.enableResize;\n\n  if (!enableResize) {\n    return \"resize: none;\";\n  }\n\n  if (enableResize === 'horizontal') {\n    return \"resize: horizontal;\";\n  }\n\n  if (enableResize === 'vertical') {\n    return \"resize: vertical;\";\n  }\n\n  return null;\n};\n\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"TextArea\",\n  componentId: \"l4fqfr-0\"\n})([\"\\n  background: transparent;\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  box-sizing: border-box;\\n  color: inherit;\\n  cursor: inherit;\\n  font-family: \", \";\\n  font-size: \", \"px;\\n  line-height: \", \";\\n  min-width: 0;\\n  outline: none;\\n  width: 100%;\\n\\n  [disabled] {\\n    \", \";\\n  }\\n\\n  \", \" \", \"\\n\\n  &::-ms-clear {\\n    display: none;\\n  }\\n\\n  &:invalid {\\n    box-shadow: none;\\n  }\\n\\n  \", \";\\n\"], function (p) {\n  return p.isMonospaced ? codeFontFamily() : 'inherit';\n}, fontSize, 20 / fontSize(), overrideSafariDisabledStyles, getMinimumRowsHeight, getResizeStyles, getPlaceholderStyle(getPlaceholderColor));\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}