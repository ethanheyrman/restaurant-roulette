{"ast":null,"code":"import styled, { keyframes, css } from 'styled-components';\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to use dynamic keyframes when we upgrade to styled components v2\n */\n\nvar keyframeNames = {\n  noop: keyframes([\"\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  \"]),\n  enterRotate: keyframes([\"\\n    from { transform: rotate(50deg); }\\n    to { transform: rotate(230deg); }\\n  \"]),\n  leaveRotate: keyframes([\"\\n    from { transform: rotate(230deg); }\\n    to { transform: rotate(510deg); }\\n  \"]),\n  leaveOpacity: keyframes([\"\\n    from { opacity: 1; }\\n    to { opacity: 0; }\\n  \"])\n};\nexport var getContainerAnimation = function getContainerAnimation(_ref) {\n  var delay = _ref.delay,\n      phase = _ref.phase;\n\n  if (phase === 'DELAY') {\n    /* This hides the spinner and allows us to use animationend events to move to the next phase in\n     * the same way we do with the other lifecycle stages */\n    return css([\"\\n      animation: \", \"s \", \";\\n    \"], delay, keyframeNames.noop);\n  }\n\n  if (phase === 'ENTER' || phase === 'IDLE') {\n    return css([\"\\n      animation: 1s ease-in-out forwards \", \";\\n    \"], keyframeNames.enterRotate);\n  }\n\n  if (phase === 'LEAVE') {\n    return css([\"\\n      animation: 0.53s ease-in-out forwards \", \",\\n        0.2s ease-in-out 0.33s \", \";\\n    \"], keyframeNames.leaveRotate, keyframeNames.leaveOpacity);\n  }\n\n  return '';\n};\n\nvar getSize = function getSize(_ref2) {\n  var size = _ref2.size;\n  return \"\".concat(size, \"px\");\n};\n\nvar Container = styled.span.withConfig({\n  displayName: \"styledContainer__Container\",\n  componentId: \"sc-1qs8wxp-0\"\n})([\"\\n  \", \"\\n  display: flex;\\n  height: \", \";\\n  width: \", \";\\n\\n  /* Rapidly creating and removing spinners will result in multiple spinners being visible while\\n   * they complete their exit animations. This rules hides the spinner if another one has been\\n   * added. */\\n  div + & {\\n    display: none;\\n  }\\n\"], getContainerAnimation, getSize, getSize);\nContainer.displayName = 'SpinnerContainer';\nexport default Container;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/calendar/node_modules/@atlaskit/spinner/Spinner/styledContainer.js"],"names":["styled","keyframes","css","keyframeNames","noop","enterRotate","leaveRotate","leaveOpacity","getContainerAnimation","_ref","delay","phase","getSize","_ref2","size","concat","Container","span","withConfig","displayName","componentId"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AAEA;;;;;;AAKA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAEH,SAAS,CAAC,CAAC,wDAAD,CAAD,CADG;AAElBI,EAAAA,WAAW,EAAEJ,SAAS,CAAC,CAAC,qFAAD,CAAD,CAFJ;AAGlBK,EAAAA,WAAW,EAAEL,SAAS,CAAC,CAAC,sFAAD,CAAD,CAHJ;AAIlBM,EAAAA,YAAY,EAAEN,SAAS,CAAC,CAAC,wDAAD,CAAD;AAJL,CAApB;AAMA,OAAO,IAAIO,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AACtE,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;;AAGA,MAAIA,KAAK,KAAK,OAAd,EAAuB;AACrB;;AAEA,WAAOT,GAAG,CAAC,CAAC,qBAAD,EAAwB,IAAxB,EAA8B,SAA9B,CAAD,EAA2CQ,KAA3C,EAAkDP,aAAa,CAACC,IAAhE,CAAV;AACD;;AAED,MAAIO,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,MAAnC,EAA2C;AACzC,WAAOT,GAAG,CAAC,CAAC,6CAAD,EAAgD,SAAhD,CAAD,EAA6DC,aAAa,CAACE,WAA3E,CAAV;AACD;;AAED,MAAIM,KAAK,KAAK,OAAd,EAAuB;AACrB,WAAOT,GAAG,CAAC,CAAC,gDAAD,EAAmD,oCAAnD,EAAyF,SAAzF,CAAD,EAAsGC,aAAa,CAACG,WAApH,EAAiIH,aAAa,CAACI,YAA/I,CAAV;AACD;;AAED,SAAO,EAAP;AACD,CAnBM;;AAqBP,IAAIK,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpC,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,SAAO,GAAGC,MAAH,CAAUD,IAAV,EAAgB,IAAhB,CAAP;AACD,CAHD;;AAKA,IAAIE,SAAS,GAAGhB,MAAM,CAACiB,IAAP,CAAYC,UAAZ,CAAuB;AACrCC,EAAAA,WAAW,EAAE,4BADwB;AAErCC,EAAAA,WAAW,EAAE;AAFwB,CAAvB,EAGb,CAAC,MAAD,EAAS,gCAAT,EAA2C,cAA3C,EAA2D,+PAA3D,CAHa,EAGgTZ,qBAHhT,EAGuUI,OAHvU,EAGgVA,OAHhV,CAAhB;AAIAI,SAAS,CAACG,WAAV,GAAwB,kBAAxB;AACA,eAAeH,SAAf","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\n\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to use dynamic keyframes when we upgrade to styled components v2\n */\nvar keyframeNames = {\n  noop: keyframes([\"\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  \"]),\n  enterRotate: keyframes([\"\\n    from { transform: rotate(50deg); }\\n    to { transform: rotate(230deg); }\\n  \"]),\n  leaveRotate: keyframes([\"\\n    from { transform: rotate(230deg); }\\n    to { transform: rotate(510deg); }\\n  \"]),\n  leaveOpacity: keyframes([\"\\n    from { opacity: 1; }\\n    to { opacity: 0; }\\n  \"])\n};\nexport var getContainerAnimation = function getContainerAnimation(_ref) {\n  var delay = _ref.delay,\n      phase = _ref.phase;\n\n  if (phase === 'DELAY') {\n    /* This hides the spinner and allows us to use animationend events to move to the next phase in\n     * the same way we do with the other lifecycle stages */\n    return css([\"\\n      animation: \", \"s \", \";\\n    \"], delay, keyframeNames.noop);\n  }\n\n  if (phase === 'ENTER' || phase === 'IDLE') {\n    return css([\"\\n      animation: 1s ease-in-out forwards \", \";\\n    \"], keyframeNames.enterRotate);\n  }\n\n  if (phase === 'LEAVE') {\n    return css([\"\\n      animation: 0.53s ease-in-out forwards \", \",\\n        0.2s ease-in-out 0.33s \", \";\\n    \"], keyframeNames.leaveRotate, keyframeNames.leaveOpacity);\n  }\n\n  return '';\n};\n\nvar getSize = function getSize(_ref2) {\n  var size = _ref2.size;\n  return \"\".concat(size, \"px\");\n};\n\nvar Container = styled.span.withConfig({\n  displayName: \"styledContainer__Container\",\n  componentId: \"sc-1qs8wxp-0\"\n})([\"\\n  \", \"\\n  display: flex;\\n  height: \", \";\\n  width: \", \";\\n\\n  /* Rapidly creating and removing spinners will result in multiple spinners being visible while\\n   * they complete their exit animations. This rules hides the spinner if another one has been\\n   * added. */\\n  div + & {\\n    display: none;\\n  }\\n\"], getContainerAnimation, getSize, getSize);\nContainer.displayName = 'SpinnerContainer';\nexport default Container;"]},"metadata":{},"sourceType":"module"}