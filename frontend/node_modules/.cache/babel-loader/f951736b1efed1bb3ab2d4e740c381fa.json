{"ast":null,"code":"import ArrowleftIcon from '@atlaskit/icon/glyph/chevron-left-large';\nimport ArrowrightIcon from '@atlaskit/icon/glyph/chevron-right-large';\nimport { colors } from '@atlaskit/theme';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { getMonthName } from '../util';\nimport Btn from './Btn';\nimport { Heading, MonthAndYear } from '../styled/Heading';\nvar ArrowLeft = styled.div.withConfig({\n  displayName: \"Heading__ArrowLeft\",\n  componentId: \"sc-1wqpjt8-0\"\n})([\"\\n  margin-left: 8px;\\n\"]);\nvar ArrowRight = styled.div.withConfig({\n  displayName: \"Heading__ArrowRight\",\n  componentId: \"sc-1wqpjt8-1\"\n})([\"\\n  margin-right: 8px;\\n\"]);\nexport default (function (props) {\n  return React.createElement(Heading, {\n    \"aria-hidden\": \"true\"\n  }, React.createElement(ArrowLeft, null, React.createElement(Btn, {\n    onClick: props.handleClickPrev\n  }, React.createElement(ArrowleftIcon, {\n    label: \"Last month\",\n    size: \"medium\",\n    primaryColor: colors.N70\n  }))), React.createElement(MonthAndYear, null, \"\".concat(getMonthName(props.month), \" \").concat(props.year)), React.createElement(ArrowRight, null, React.createElement(Btn, {\n    onClick: props.handleClickNext\n  }, React.createElement(ArrowrightIcon, {\n    label: \"Next month\",\n    size: \"medium\",\n    primaryColor: colors.N70\n  }))));\n});","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/calendar/components/Heading.js"],"names":["ArrowleftIcon","ArrowrightIcon","colors","React","styled","getMonthName","Btn","Heading","MonthAndYear","ArrowLeft","div","withConfig","displayName","componentId","ArrowRight","props","createElement","onClick","handleClickPrev","label","size","primaryColor","N70","concat","month","year","handleClickNext"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,mBAAtC;AACA,IAAIC,SAAS,GAAGL,MAAM,CAACM,GAAP,CAAWC,UAAX,CAAsB;AACpCC,EAAAA,WAAW,EAAE,oBADuB;AAEpCC,EAAAA,WAAW,EAAE;AAFuB,CAAtB,EAGb,CAAC,yBAAD,CAHa,CAAhB;AAIA,IAAIC,UAAU,GAAGV,MAAM,CAACM,GAAP,CAAWC,UAAX,CAAsB;AACrCC,EAAAA,WAAW,EAAE,qBADwB;AAErCC,EAAAA,WAAW,EAAE;AAFwB,CAAtB,EAGd,CAAC,0BAAD,CAHc,CAAjB;AAIA,gBAAgB,UAAUE,KAAV,EAAiB;AAC/B,SAAOZ,KAAK,CAACa,aAAN,CAAoBT,OAApB,EAA6B;AAClC,mBAAe;AADmB,GAA7B,EAEJJ,KAAK,CAACa,aAAN,CAAoBP,SAApB,EAA+B,IAA/B,EAAqCN,KAAK,CAACa,aAAN,CAAoBV,GAApB,EAAyB;AAC/DW,IAAAA,OAAO,EAAEF,KAAK,CAACG;AADgD,GAAzB,EAErCf,KAAK,CAACa,aAAN,CAAoBhB,aAApB,EAAmC;AACpCmB,IAAAA,KAAK,EAAE,YAD6B;AAEpCC,IAAAA,IAAI,EAAE,QAF8B;AAGpCC,IAAAA,YAAY,EAAEnB,MAAM,CAACoB;AAHe,GAAnC,CAFqC,CAArC,CAFI,EAQDnB,KAAK,CAACa,aAAN,CAAoBR,YAApB,EAAkC,IAAlC,EAAwC,GAAGe,MAAH,CAAUlB,YAAY,CAACU,KAAK,CAACS,KAAP,CAAtB,EAAqC,GAArC,EAA0CD,MAA1C,CAAiDR,KAAK,CAACU,IAAvD,CAAxC,CARC,EAQsGtB,KAAK,CAACa,aAAN,CAAoBF,UAApB,EAAgC,IAAhC,EAAsCX,KAAK,CAACa,aAAN,CAAoBV,GAApB,EAAyB;AAC1KW,IAAAA,OAAO,EAAEF,KAAK,CAACW;AAD2J,GAAzB,EAEhJvB,KAAK,CAACa,aAAN,CAAoBf,cAApB,EAAoC;AACrCkB,IAAAA,KAAK,EAAE,YAD8B;AAErCC,IAAAA,IAAI,EAAE,QAF+B;AAGrCC,IAAAA,YAAY,EAAEnB,MAAM,CAACoB;AAHgB,GAApC,CAFgJ,CAAtC,CARtG,CAAP;AAeD,CAhBD","sourcesContent":["import ArrowleftIcon from '@atlaskit/icon/glyph/chevron-left-large';\nimport ArrowrightIcon from '@atlaskit/icon/glyph/chevron-right-large';\nimport { colors } from '@atlaskit/theme';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { getMonthName } from '../util';\nimport Btn from './Btn';\nimport { Heading, MonthAndYear } from '../styled/Heading';\nvar ArrowLeft = styled.div.withConfig({\n  displayName: \"Heading__ArrowLeft\",\n  componentId: \"sc-1wqpjt8-0\"\n})([\"\\n  margin-left: 8px;\\n\"]);\nvar ArrowRight = styled.div.withConfig({\n  displayName: \"Heading__ArrowRight\",\n  componentId: \"sc-1wqpjt8-1\"\n})([\"\\n  margin-right: 8px;\\n\"]);\nexport default (function (props) {\n  return React.createElement(Heading, {\n    \"aria-hidden\": \"true\"\n  }, React.createElement(ArrowLeft, null, React.createElement(Btn, {\n    onClick: props.handleClickPrev\n  }, React.createElement(ArrowleftIcon, {\n    label: \"Last month\",\n    size: \"medium\",\n    primaryColor: colors.N70\n  }))), React.createElement(MonthAndYear, null, \"\".concat(getMonthName(props.month), \" \").concat(props.year)), React.createElement(ArrowRight, null, React.createElement(Btn, {\n    onClick: props.handleClickNext\n  }, React.createElement(ArrowrightIcon, {\n    label: \"Next month\",\n    size: \"medium\",\n    primaryColor: colors.N70\n  }))));\n});"]},"metadata":{},"sourceType":"module"}