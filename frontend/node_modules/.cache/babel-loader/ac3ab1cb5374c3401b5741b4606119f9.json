{"ast":null,"code":"/**\n * Calendar constructor\n *\n * @param   {Object}  options               Calendar options\n *   @param {Object}  options.startDate     Date object indicating the selected start date\n *   @param {Object}  options.endDate       Date object indicating the selected end date\n *   @param {Boolean} options.siblingMonths Calculate dates from sibling months (before and after the current month, based on weekStart)\n *   @param {Boolean} options.weekNumbers   Caclulate the week days\n *   @param {Number}  options.weekStart     Day of the week to start the calendar, respects `Date.prototype.getDay` (defaults to `0`, Sunday)\n */\nfunction Calendar(options) {\n  options = options || {};\n  this.startDate = options.startDate;\n  this.endDate = options.endDate;\n  this.siblingMonths = options.siblingMonths;\n  this.weekNumbers = options.weekNumbers;\n  this.weekStart = options.weekStart;\n\n  if (this.weekStart === undefined) {\n    this.weekStart = 0;\n  }\n}\n/**\n * Calculate a calendar month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Array}        Calendar days\n */\n\n\nCalendar.prototype.getCalendar = function (year, month) {\n  var date = new Date(Date.UTC(year, month, 1, 0, 0, 0, 0));\n  year = date.getUTCFullYear();\n  month = date.getUTCMonth();\n  var calendar = [],\n      firstDay = date.getUTCDay(),\n      firstDate = -((7 - this.weekStart + firstDay) % 7),\n      lastDate = Calendar.daysInMonth(year, month),\n      lastDay = (lastDate - firstDate) % 7,\n      lastDatePreviousMonth = Calendar.daysInMonth(year, month - 1),\n      i = firstDate,\n      max = lastDate - i + (lastDay != 0 ? 7 - lastDay : 0) + firstDate,\n      currentDay,\n      currentDate,\n      currentDateObject,\n      currentWeekNumber = null,\n      otherMonth,\n      otherYear;\n\n  while (i < max) {\n    currentDate = i + 1;\n    currentDay = ((i < 1 ? 7 + i : i) + firstDay) % 7;\n\n    if (currentDate < 1 || currentDate > lastDate) {\n      if (this.siblingMonths) {\n        if (currentDate < 1) {\n          otherMonth = month - 1;\n          otherYear = year;\n\n          if (otherMonth < 0) {\n            otherMonth = 11;\n            otherYear--;\n          }\n\n          currentDate = lastDatePreviousMonth + currentDate;\n        } else if (currentDate > lastDate) {\n          otherMonth = month + 1;\n          otherYear = year;\n\n          if (otherMonth > 11) {\n            otherMonth = 0;\n            otherYear++;\n          }\n\n          currentDate = i - lastDate + 1;\n        }\n\n        currentDateObject = {\n          day: currentDate,\n          weekDay: currentDay,\n          month: otherMonth,\n          year: otherYear,\n          siblingMonth: true\n        };\n      } else {\n        currentDateObject = false;\n      }\n    } else {\n      currentDateObject = {\n        day: currentDate,\n        weekDay: currentDay,\n        month: month,\n        year: year\n      };\n    }\n\n    if (currentDateObject && this.weekNumbers) {\n      if (currentWeekNumber === null) {\n        currentWeekNumber = Calendar.calculateWeekNumber(currentDateObject);\n      } else if (currentDay == 1 && currentWeekNumber == 52) {\n        currentWeekNumber = 1;\n      } else if (currentDay == 1) {\n        currentWeekNumber++;\n      }\n\n      currentDateObject.weekNumber = currentWeekNumber;\n    }\n\n    if (currentDateObject && this.startDate) {\n      currentDateObject.selected = this.isDateSelected(currentDateObject);\n    }\n\n    calendar.push(currentDateObject);\n    i++;\n  }\n\n  return calendar;\n};\n/**\n * Checks if a date is selected\n *\n * @param  {Object}  date Date object\n * @return {Boolean}      Selected status of the date\n */\n\n\nCalendar.prototype.isDateSelected = function (date) {\n  if (date.year == this.startDate.year && date.month == this.startDate.month && date.day == this.startDate.day) {\n    return true;\n  } else if (this.endDate) {\n    if (date.year == this.startDate.year && date.month == this.startDate.month && date.day < this.startDate.day) {\n      return false;\n    } else if (date.year == this.endDate.year && date.month == this.endDate.month && date.day > this.endDate.day) {\n      return false;\n    } else if (date.year == this.startDate.year && date.month < this.startDate.month) {\n      return false;\n    } else if (date.year == this.endDate.year && date.month > this.endDate.month) {\n      return false;\n    } else if (date.year < this.startDate.year) {\n      return false;\n    } else if (date.year > this.endDate.year) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n/**\n * Sets the selected period start\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setStartDate = function (date) {\n  this.startDate = date;\n};\n/**\n * Sets the selected period end\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setEndDate = function (date) {\n  this.endDate = date;\n};\n/**\n * Sets one selected date\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setDate = Calendar.prototype.setStartDate;\n/**\n * Calculates the difference between two dates (date1 - date2), in days\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Days between the dates\n */\n\nCalendar.diff = function (date1, date2) {\n  date1 = new Date(Date.UTC(date1.year, date1.month, date1.day, 0, 0, 0, 0));\n  date2 = new Date(Date.UTC(date2.year, date2.month, date2.day, 0, 0, 0, 0));\n  return Math.ceil((date1.getTime() - date2.getTime()) / 86400000);\n};\n/**\n * Calculates the interval between two dates\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Number of days\n */\n\n\nCalendar.interval = function (date1, date2) {\n  return Math.abs(Calendar.diff(date1, date2)) + 1;\n};\n/**\n * Quickly compare two dates\n *\n * @param  {Object} leftDate  Left date\n * @param  {Object} rightDate Right date\n * @return {Number}           Comparison result: -1 (left < right), 0 (equal) or 1 (left > right)\n */\n\n\nCalendar.compare = function (leftDate, rightDate) {\n  if (typeof leftDate != 'object' || typeof rightDate != 'object' || leftDate === null || rightDate === null) {\n    throw new TypeError('dates must be objects');\n  }\n\n  if (leftDate.year < rightDate.year) {\n    return -1;\n  } else if (leftDate.year > rightDate.year) {\n    return 1;\n  } else if (leftDate.month < rightDate.month) {\n    return -1;\n  } else if (leftDate.month > rightDate.month) {\n    return 1;\n  } else if (leftDate.day < rightDate.day) {\n    return -1;\n  } else if (leftDate.day > rightDate.day) {\n    return 1;\n  }\n\n  return 0;\n};\n/**\n * Calculates the number of days in a month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Number}       Length of the month\n */\n\n\nCalendar.daysInMonth = function (year, month) {\n  return new Date(year, month + 1, 0).getDate();\n};\n/**\n * Calculates if a given year is a leap year\n *\n * @param  {Number}  year Year\n * @return {Boolean}      Leap year or not\n */\n\n\nCalendar.isLeapYear = function (year) {\n  return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n};\n/**\n * Calculates the week number for a given date\n *\n * @param  {Object} date Date object\n * @return {Number}      Week number\n */\n// Adapted from http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\n\n\nCalendar.calculateWeekNumber = function (date) {\n  // Creates the requested date\n  var current = new Date(Date.UTC(date.year, date.month, date.day, 0, 0, 0, 0)); // Create a copy of the object\n\n  var target = new Date(current.valueOf()); // ISO week date weeks start on monday so correct the day number\n\n  var dayNr = (current.getUTCDay() + 6) % 7; // ISO 8601 states that week 1 is the week with the first thursday of that\n  // year. Set the target date to the thursday in the target week.\n\n  target.setUTCDate(target.getUTCDate() - dayNr + 3); // Store the millisecond value of the target date\n\n  var firstThursday = target.valueOf(); // Set the target to the first thursday of the year\n  // First set the target to january first\n\n  target.setUTCMonth(0, 1); // Not a thursday? Correct the date to the next thursday\n\n  if (target.getUTCDay() != 4) {\n    target.setUTCMonth(0, 1 + (4 - target.getUTCDay() + 7) % 7);\n  } // The weeknumber is the number of weeks between the  first thursday of the\n  // year and the thursday in the target week.\n  // 604800000 = 7 * 24 * 3600 * 1000\n\n\n  return 1 + Math.ceil((firstThursday - target) / 604800000);\n};\n/**\n * Exports the Calendar\n */\n\n\nmodule.exports = {\n  Calendar: Calendar\n};","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/calendar-base/lib/calendar-base.js"],"names":["Calendar","options","startDate","endDate","siblingMonths","weekNumbers","weekStart","undefined","prototype","getCalendar","year","month","date","Date","UTC","getUTCFullYear","getUTCMonth","calendar","firstDay","getUTCDay","firstDate","lastDate","daysInMonth","lastDay","lastDatePreviousMonth","i","max","currentDay","currentDate","currentDateObject","currentWeekNumber","otherMonth","otherYear","day","weekDay","siblingMonth","calculateWeekNumber","weekNumber","selected","isDateSelected","push","setStartDate","setEndDate","setDate","diff","date1","date2","Math","ceil","getTime","interval","abs","compare","leftDate","rightDate","TypeError","getDate","isLeapYear","current","target","valueOf","dayNr","setUTCDate","getUTCDate","firstThursday","setUTCMonth","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA,SAASA,QAAT,CAAmBC,OAAnB,EAA4B;AAC3BA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,OAAKC,SAAL,GAAiBD,OAAO,CAACC,SAAzB;AACA,OAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAA7B;AACA,OAAKC,WAAL,GAAmBJ,OAAO,CAACI,WAA3B;AACA,OAAKC,SAAL,GAAiBL,OAAO,CAACK,SAAzB;;AAEA,MAAI,KAAKA,SAAL,KAAmBC,SAAvB,EAAkC;AACjC,SAAKD,SAAL,GAAiB,CAAjB;AACA;AACD;AAED;;;;;;;;;AAOAN,QAAQ,CAACQ,SAAT,CAAmBC,WAAnB,GAAiC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACvD,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAeC,KAAf,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAT,CAAX;AAEAD,EAAAA,IAAI,GAAGE,IAAI,CAACG,cAAL,EAAP;AACAJ,EAAAA,KAAK,GAAGC,IAAI,CAACI,WAAL,EAAR;AAEA,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACCC,QAAQ,GAAGN,IAAI,CAACO,SAAL,EADZ;AAAA,MAGCC,SAAS,GAAG,EAAG,CAAE,IAAI,KAAKd,SAAV,GAAuBY,QAAxB,IAAoC,CAAvC,CAHb;AAAA,MAICG,QAAQ,GAAGrB,QAAQ,CAACsB,WAAT,CAAqBZ,IAArB,EAA2BC,KAA3B,CAJZ;AAAA,MAKCY,OAAO,GAAI,CAACF,QAAQ,GAAGD,SAAZ,IAAyB,CALrC;AAAA,MAMCI,qBAAqB,GAAGxB,QAAQ,CAACsB,WAAT,CAAqBZ,IAArB,EAA2BC,KAAK,GAAG,CAAnC,CANzB;AAAA,MAOCc,CAAC,GAAGL,SAPL;AAAA,MAQCM,GAAG,GAAIL,QAAQ,GAAGI,CAAZ,IAAkBF,OAAO,IAAI,CAAX,GAAe,IAAIA,OAAnB,GAA6B,CAA/C,IAAoDH,SAR3D;AAAA,MASCO,UATD;AAAA,MAUCC,WAVD;AAAA,MAWCC,iBAXD;AAAA,MAYCC,iBAAiB,GAAG,IAZrB;AAAA,MAaCC,UAbD;AAAA,MAcCC,SAdD;;AAgBA,SAAOP,CAAC,GAAGC,GAAX,EAAgB;AACfE,IAAAA,WAAW,GAAGH,CAAC,GAAG,CAAlB;AACAE,IAAAA,UAAU,GAAG,CAAC,CAACF,CAAC,GAAG,CAAJ,GAAQ,IAAIA,CAAZ,GAAgBA,CAAjB,IAAsBP,QAAvB,IAAmC,CAAhD;;AACA,QAAIU,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGP,QAArC,EAA+C;AAC9C,UAAI,KAAKjB,aAAT,EAAwB;AACvB,YAAIwB,WAAW,GAAG,CAAlB,EAAqB;AACpBG,UAAAA,UAAU,GAAGpB,KAAK,GAAG,CAArB;AACAqB,UAAAA,SAAS,GAAGtB,IAAZ;;AACA,cAAIqB,UAAU,GAAG,CAAjB,EAAoB;AACnBA,YAAAA,UAAU,GAAG,EAAb;AACAC,YAAAA,SAAS;AACT;;AACDJ,UAAAA,WAAW,GAAGJ,qBAAqB,GAAGI,WAAtC;AACA,SARD,MASK,IAAIA,WAAW,GAAGP,QAAlB,EAA4B;AAChCU,UAAAA,UAAU,GAAGpB,KAAK,GAAG,CAArB;AACAqB,UAAAA,SAAS,GAAGtB,IAAZ;;AACA,cAAIqB,UAAU,GAAG,EAAjB,EAAqB;AACpBA,YAAAA,UAAU,GAAG,CAAb;AACAC,YAAAA,SAAS;AACT;;AACDJ,UAAAA,WAAW,GAAGH,CAAC,GAAGJ,QAAJ,GAAe,CAA7B;AACA;;AACDQ,QAAAA,iBAAiB,GAAG;AACnBI,UAAAA,GAAG,EAAEL,WADc;AAEnBM,UAAAA,OAAO,EAAEP,UAFU;AAGnBhB,UAAAA,KAAK,EAAEoB,UAHY;AAInBrB,UAAAA,IAAI,EAAEsB,SAJa;AAKnBG,UAAAA,YAAY,EAAE;AALK,SAApB;AAOA,OA1BD,MA2BK;AACJN,QAAAA,iBAAiB,GAAG,KAApB;AACA;AACD,KA/BD,MAgCK;AACJA,MAAAA,iBAAiB,GAAG;AACnBI,QAAAA,GAAG,EAAEL,WADc;AAEnBM,QAAAA,OAAO,EAAEP,UAFU;AAGnBhB,QAAAA,KAAK,EAAEA,KAHY;AAInBD,QAAAA,IAAI,EAAEA;AAJa,OAApB;AAMA;;AAED,QAAImB,iBAAiB,IAAI,KAAKxB,WAA9B,EAA2C;AAC1C,UAAIyB,iBAAiB,KAAK,IAA1B,EAAgC;AAC/BA,QAAAA,iBAAiB,GAAG9B,QAAQ,CAACoC,mBAAT,CAA6BP,iBAA7B,CAApB;AACA,OAFD,MAGK,IAAIF,UAAU,IAAI,CAAd,IAAmBG,iBAAiB,IAAI,EAA5C,EAAgD;AACpDA,QAAAA,iBAAiB,GAAG,CAApB;AACA,OAFI,MAGA,IAAIH,UAAU,IAAI,CAAlB,EAAqB;AACzBG,QAAAA,iBAAiB;AACjB;;AACDD,MAAAA,iBAAiB,CAACQ,UAAlB,GAA+BP,iBAA/B;AACA;;AAED,QAAID,iBAAiB,IAAI,KAAK3B,SAA9B,EAAyC;AACxC2B,MAAAA,iBAAiB,CAACS,QAAlB,GAA6B,KAAKC,cAAL,CAAoBV,iBAApB,CAA7B;AACA;;AAEDZ,IAAAA,QAAQ,CAACuB,IAAT,CAAcX,iBAAd;AACAJ,IAAAA,CAAC;AACD;;AAED,SAAOR,QAAP;AACA,CAxFD;AA0FA;;;;;;;;AAMAjB,QAAQ,CAACQ,SAAT,CAAmB+B,cAAnB,GAAoC,UAAU3B,IAAV,EAAgB;AACnD,MAAIA,IAAI,CAACF,IAAL,IAAa,KAAKR,SAAL,CAAeQ,IAA5B,IAAoCE,IAAI,CAACD,KAAL,IAAc,KAAKT,SAAL,CAAeS,KAAjE,IAA0EC,IAAI,CAACqB,GAAL,IAAY,KAAK/B,SAAL,CAAe+B,GAAzG,EAA8G;AAC7G,WAAO,IAAP;AACA,GAFD,MAGK,IAAI,KAAK9B,OAAT,EAAkB;AACtB,QAAIS,IAAI,CAACF,IAAL,IAAa,KAAKR,SAAL,CAAeQ,IAA5B,IAAoCE,IAAI,CAACD,KAAL,IAAc,KAAKT,SAAL,CAAeS,KAAjE,IAA0EC,IAAI,CAACqB,GAAL,GAAW,KAAK/B,SAAL,CAAe+B,GAAxG,EAA6G;AAC5G,aAAO,KAAP;AACA,KAFD,MAGK,IAAIrB,IAAI,CAACF,IAAL,IAAa,KAAKP,OAAL,CAAaO,IAA1B,IAAkCE,IAAI,CAACD,KAAL,IAAc,KAAKR,OAAL,CAAaQ,KAA7D,IAAsEC,IAAI,CAACqB,GAAL,GAAW,KAAK9B,OAAL,CAAa8B,GAAlG,EAAuG;AAC3G,aAAO,KAAP;AACA,KAFI,MAGA,IAAIrB,IAAI,CAACF,IAAL,IAAa,KAAKR,SAAL,CAAeQ,IAA5B,IAAoCE,IAAI,CAACD,KAAL,GAAa,KAAKT,SAAL,CAAeS,KAApE,EAA2E;AAC/E,aAAO,KAAP;AACA,KAFI,MAGA,IAAIC,IAAI,CAACF,IAAL,IAAa,KAAKP,OAAL,CAAaO,IAA1B,IAAkCE,IAAI,CAACD,KAAL,GAAa,KAAKR,OAAL,CAAaQ,KAAhE,EAAuE;AAC3E,aAAO,KAAP;AACA,KAFI,MAGA,IAAIC,IAAI,CAACF,IAAL,GAAY,KAAKR,SAAL,CAAeQ,IAA/B,EAAqC;AACzC,aAAO,KAAP;AACA,KAFI,MAGA,IAAIE,IAAI,CAACF,IAAL,GAAY,KAAKP,OAAL,CAAaO,IAA7B,EAAmC;AACvC,aAAO,KAAP;AACA;;AACD,WAAO,IAAP;AACA;;AACD,SAAO,KAAP;AACA,CA1BD;AA4BA;;;;;;;AAKAV,QAAQ,CAACQ,SAAT,CAAmBiC,YAAnB,GAAkC,UAAU7B,IAAV,EAAgB;AACjD,OAAKV,SAAL,GAAiBU,IAAjB;AACA,CAFD;AAIA;;;;;;;AAKAZ,QAAQ,CAACQ,SAAT,CAAmBkC,UAAnB,GAAgC,UAAU9B,IAAV,EAAgB;AAC/C,OAAKT,OAAL,GAAeS,IAAf;AACA,CAFD;AAIA;;;;;;;AAKAZ,QAAQ,CAACQ,SAAT,CAAmBmC,OAAnB,GAA6B3C,QAAQ,CAACQ,SAAT,CAAmBiC,YAAhD;AAEA;;;;;;;;AAOAzC,QAAQ,CAAC4C,IAAT,GAAgB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvCD,EAAAA,KAAK,GAAG,IAAIhC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAAS+B,KAAK,CAACnC,IAAf,EAAqBmC,KAAK,CAAClC,KAA3B,EAAkCkC,KAAK,CAACZ,GAAxC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAT,CAAR;AACAa,EAAAA,KAAK,GAAG,IAAIjC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASgC,KAAK,CAACpC,IAAf,EAAqBoC,KAAK,CAACnC,KAA3B,EAAkCmC,KAAK,CAACb,GAAxC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAT,CAAR;AACA,SAAOc,IAAI,CAACC,IAAL,CAAU,CAACH,KAAK,CAACI,OAAN,KAAkBH,KAAK,CAACG,OAAN,EAAnB,IAAsC,QAAhD,CAAP;AACA,CAJD;AAMA;;;;;;;;;AAOAjD,QAAQ,CAACkD,QAAT,GAAoB,UAAUL,KAAV,EAAiBC,KAAjB,EAAwB;AAC3C,SAAOC,IAAI,CAACI,GAAL,CAASnD,QAAQ,CAAC4C,IAAT,CAAcC,KAAd,EAAqBC,KAArB,CAAT,IAAwC,CAA/C;AACA,CAFD;AAIA;;;;;;;;;AAOA9C,QAAQ,CAACoD,OAAT,GAAmB,UAAUC,QAAV,EAAoBC,SAApB,EAA+B;AACjD,MAAI,OAAOD,QAAP,IAAmB,QAAnB,IAA+B,OAAOC,SAAP,IAAoB,QAAnD,IAA+DD,QAAQ,KAAK,IAA5E,IAAoFC,SAAS,KAAK,IAAtG,EAA4G;AAC3G,UAAM,IAAIC,SAAJ,CAAc,uBAAd,CAAN;AACA;;AAED,MAAIF,QAAQ,CAAC3C,IAAT,GAAgB4C,SAAS,CAAC5C,IAA9B,EAAoC;AACnC,WAAO,CAAC,CAAR;AACA,GAFD,MAEO,IAAI2C,QAAQ,CAAC3C,IAAT,GAAgB4C,SAAS,CAAC5C,IAA9B,EAAoC;AAC1C,WAAO,CAAP;AACA,GAFM,MAEA,IAAI2C,QAAQ,CAAC1C,KAAT,GAAiB2C,SAAS,CAAC3C,KAA/B,EAAsC;AAC5C,WAAO,CAAC,CAAR;AACA,GAFM,MAEA,IAAI0C,QAAQ,CAAC1C,KAAT,GAAiB2C,SAAS,CAAC3C,KAA/B,EAAsC;AAC5C,WAAO,CAAP;AACA,GAFM,MAEA,IAAI0C,QAAQ,CAACpB,GAAT,GAAeqB,SAAS,CAACrB,GAA7B,EAAkC;AACxC,WAAO,CAAC,CAAR;AACA,GAFM,MAEA,IAAIoB,QAAQ,CAACpB,GAAT,GAAeqB,SAAS,CAACrB,GAA7B,EAAkC;AACxC,WAAO,CAAP;AACA;;AAED,SAAO,CAAP;AACA,CApBD;AAsBA;;;;;;;;;AAOAjC,QAAQ,CAACsB,WAAT,GAAuB,UAAUZ,IAAV,EAAgBC,KAAhB,EAAuB;AAC7C,SAAO,IAAIE,IAAJ,CAASH,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0B,CAA1B,EAA6B6C,OAA7B,EAAP;AACA,CAFD;AAIA;;;;;;;;AAMAxD,QAAQ,CAACyD,UAAT,GAAsB,UAAU/C,IAAV,EAAgB;AACrC,SAASA,IAAI,GAAG,CAAP,IAAY,CAAb,IAAoBA,IAAI,GAAG,GAAP,IAAc,CAAnC,IAA2CA,IAAI,GAAG,GAAP,IAAc,CAAhE;AACA,CAFD;AAIA;;;;;;AAMA;;;AACAV,QAAQ,CAACoC,mBAAT,GAA+B,UAAUxB,IAAV,EAAgB;AAC9C;AACA,MAAI8C,OAAO,GAAG,IAAI7C,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASF,IAAI,CAACF,IAAd,EAAoBE,IAAI,CAACD,KAAzB,EAAgCC,IAAI,CAACqB,GAArC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAAT,CAAd,CAF8C,CAI9C;;AACA,MAAI0B,MAAM,GAAG,IAAI9C,IAAJ,CAAS6C,OAAO,CAACE,OAAR,EAAT,CAAb,CAL8C,CAO9C;;AACA,MAAIC,KAAK,GAAG,CAACH,OAAO,CAACvC,SAAR,KAAsB,CAAvB,IAA4B,CAAxC,CAR8C,CAU9C;AACA;;AACAwC,EAAAA,MAAM,CAACG,UAAP,CAAkBH,MAAM,CAACI,UAAP,KAAsBF,KAAtB,GAA8B,CAAhD,EAZ8C,CAc9C;;AACA,MAAIG,aAAa,GAAGL,MAAM,CAACC,OAAP,EAApB,CAf8C,CAiB9C;AAEA;;AACAD,EAAAA,MAAM,CAACM,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EApB8C,CAsB9C;;AACA,MAAIN,MAAM,CAACxC,SAAP,MAAsB,CAA1B,EAA6B;AAC5BwC,IAAAA,MAAM,CAACM,WAAP,CAAmB,CAAnB,EAAsB,IAAI,CAAE,IAAIN,MAAM,CAACxC,SAAP,EAAL,GAA2B,CAA5B,IAAiC,CAA3D;AACA,GAzB6C,CA2B9C;AACA;AACA;;;AACA,SAAO,IAAI4B,IAAI,CAACC,IAAL,CAAU,CAACgB,aAAa,GAAGL,MAAjB,IAA2B,SAArC,CAAX;AACA,CA/BD;AAiCA;;;;;AAGAO,MAAM,CAACC,OAAP,GAAiB;AAAEnE,EAAAA,QAAQ,EAAEA;AAAZ,CAAjB","sourcesContent":["/**\n * Calendar constructor\n *\n * @param   {Object}  options               Calendar options\n *   @param {Object}  options.startDate     Date object indicating the selected start date\n *   @param {Object}  options.endDate       Date object indicating the selected end date\n *   @param {Boolean} options.siblingMonths Calculate dates from sibling months (before and after the current month, based on weekStart)\n *   @param {Boolean} options.weekNumbers   Caclulate the week days\n *   @param {Number}  options.weekStart     Day of the week to start the calendar, respects `Date.prototype.getDay` (defaults to `0`, Sunday)\n */\nfunction Calendar (options) {\n\toptions = options || {};\n\n\tthis.startDate = options.startDate;\n\tthis.endDate = options.endDate;\n\tthis.siblingMonths = options.siblingMonths;\n\tthis.weekNumbers = options.weekNumbers;\n\tthis.weekStart = options.weekStart;\n\n\tif (this.weekStart === undefined) {\n\t\tthis.weekStart = 0;\n\t}\n}\n\n/**\n * Calculate a calendar month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Array}        Calendar days\n */\nCalendar.prototype.getCalendar = function (year, month) {\n\tvar date = new Date(Date.UTC(year, month, 1, 0, 0, 0, 0));\n\n\tyear = date.getUTCFullYear();\n\tmonth = date.getUTCMonth();\n\n\tvar calendar = [],\n\t\tfirstDay = date.getUTCDay(),\n\n\t\tfirstDate = - (((7 - this.weekStart) + firstDay) % 7),\n\t\tlastDate = Calendar.daysInMonth(year, month),\n\t\tlastDay = ((lastDate - firstDate) % 7),\n\t\tlastDatePreviousMonth = Calendar.daysInMonth(year, month - 1),\n\t\ti = firstDate,\n\t\tmax = (lastDate - i) + (lastDay != 0 ? 7 - lastDay : 0) + firstDate,\n\t\tcurrentDay,\n\t\tcurrentDate,\n\t\tcurrentDateObject,\n\t\tcurrentWeekNumber = null,\n\t\totherMonth,\n\t\totherYear;\n\n\twhile (i < max) {\n\t\tcurrentDate = i + 1;\n\t\tcurrentDay = ((i < 1 ? 7 + i : i) + firstDay) % 7;\n\t\tif (currentDate < 1 || currentDate > lastDate) {\n\t\t\tif (this.siblingMonths) {\n\t\t\t\tif (currentDate < 1) {\n\t\t\t\t\totherMonth = month - 1;\n\t\t\t\t\totherYear = year;\n\t\t\t\t\tif (otherMonth < 0) {\n\t\t\t\t\t\totherMonth = 11;\n\t\t\t\t\t\totherYear --;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentDate = lastDatePreviousMonth + currentDate;\n\t\t\t\t}\n\t\t\t\telse if (currentDate > lastDate) {\n\t\t\t\t\totherMonth = month + 1;\n\t\t\t\t\totherYear = year;\n\t\t\t\t\tif (otherMonth > 11) {\n\t\t\t\t\t\totherMonth = 0;\n\t\t\t\t\t\totherYear ++;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentDate = i - lastDate + 1;\n\t\t\t\t}\n\t\t\t\tcurrentDateObject = {\n\t\t\t\t\tday: currentDate,\n\t\t\t\t\tweekDay: currentDay,\n\t\t\t\t\tmonth: otherMonth,\n\t\t\t\t\tyear: otherYear,\n\t\t\t\t\tsiblingMonth: true\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrentDateObject = false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcurrentDateObject = {\n\t\t\t\tday: currentDate,\n\t\t\t\tweekDay: currentDay,\n\t\t\t\tmonth: month,\n\t\t\t\tyear: year\n\t\t\t};\n\t\t}\n\n\t\tif (currentDateObject && this.weekNumbers) {\n\t\t\tif (currentWeekNumber === null) {\n\t\t\t\tcurrentWeekNumber = Calendar.calculateWeekNumber(currentDateObject);\n\t\t\t}\n\t\t\telse if (currentDay == 1 && currentWeekNumber == 52) {\n\t\t\t\tcurrentWeekNumber = 1;\n\t\t\t}\n\t\t\telse if (currentDay == 1) {\n\t\t\t\tcurrentWeekNumber ++;\n\t\t\t}\n\t\t\tcurrentDateObject.weekNumber = currentWeekNumber;\n\t\t}\n\n\t\tif (currentDateObject && this.startDate) {\n\t\t\tcurrentDateObject.selected = this.isDateSelected(currentDateObject);\n\t\t}\n\n\t\tcalendar.push(currentDateObject);\n\t\ti ++;\n\t}\n\n\treturn calendar;\n};\n\n/**\n * Checks if a date is selected\n *\n * @param  {Object}  date Date object\n * @return {Boolean}      Selected status of the date\n */\nCalendar.prototype.isDateSelected = function (date) {\n\tif (date.year == this.startDate.year && date.month == this.startDate.month && date.day == this.startDate.day) {\n\t\treturn true;\n\t}\n\telse if (this.endDate) {\n\t\tif (date.year == this.startDate.year && date.month == this.startDate.month && date.day < this.startDate.day) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.endDate.year && date.month == this.endDate.month && date.day > this.endDate.day) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.startDate.year && date.month < this.startDate.month) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.endDate.year && date.month > this.endDate.month) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year < this.startDate.year) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year > this.endDate.year) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Sets the selected period start\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setStartDate = function (date) {\n\tthis.startDate = date;\n};\n\n/**\n * Sets the selected period end\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setEndDate = function (date) {\n\tthis.endDate = date;\n};\n\n/**\n * Sets one selected date\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setDate = Calendar.prototype.setStartDate;\n\n/**\n * Calculates the difference between two dates (date1 - date2), in days\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Days between the dates\n */\nCalendar.diff = function (date1, date2) {\n\tdate1 = new Date(Date.UTC(date1.year, date1.month, date1.day, 0, 0, 0, 0));\n\tdate2 = new Date(Date.UTC(date2.year, date2.month, date2.day, 0, 0, 0, 0));\n\treturn Math.ceil((date1.getTime() - date2.getTime()) / 86400000);\n};\n\n/**\n * Calculates the interval between two dates\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Number of days\n */\nCalendar.interval = function (date1, date2) {\n\treturn Math.abs(Calendar.diff(date1, date2)) + 1;\n};\n\n/**\n * Quickly compare two dates\n *\n * @param  {Object} leftDate  Left date\n * @param  {Object} rightDate Right date\n * @return {Number}           Comparison result: -1 (left < right), 0 (equal) or 1 (left > right)\n */\nCalendar.compare = function (leftDate, rightDate) {\n\tif (typeof leftDate != 'object' || typeof rightDate != 'object' || leftDate === null || rightDate === null) {\n\t\tthrow new TypeError('dates must be objects');\n\t}\n\n\tif (leftDate.year < rightDate.year) {\n\t\treturn -1;\n\t} else if (leftDate.year > rightDate.year) {\n\t\treturn 1;\n\t} else if (leftDate.month < rightDate.month) {\n\t\treturn -1;\n\t} else if (leftDate.month > rightDate.month) {\n\t\treturn 1;\n\t} else if (leftDate.day < rightDate.day) {\n\t\treturn -1;\n\t} else if (leftDate.day > rightDate.day) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\n/**\n * Calculates the number of days in a month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Number}       Length of the month\n */\nCalendar.daysInMonth = function (year, month) {\n\treturn new Date(year, month + 1, 0).getDate();\n};\n\n/**\n * Calculates if a given year is a leap year\n *\n * @param  {Number}  year Year\n * @return {Boolean}      Leap year or not\n */\nCalendar.isLeapYear = function (year) {\n\treturn ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n}\n\n/**\n * Calculates the week number for a given date\n *\n * @param  {Object} date Date object\n * @return {Number}      Week number\n */\n// Adapted from http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\nCalendar.calculateWeekNumber = function (date) {\n\t// Creates the requested date\n\tvar current = new Date(Date.UTC(date.year, date.month, date.day, 0, 0, 0, 0));\n\n\t// Create a copy of the object\n\tvar target = new Date(current.valueOf());\n\n\t// ISO week date weeks start on monday so correct the day number\n\tvar dayNr = (current.getUTCDay() + 6) % 7;\n\n\t// ISO 8601 states that week 1 is the week with the first thursday of that\n\t// year. Set the target date to the thursday in the target week.\n\ttarget.setUTCDate(target.getUTCDate() - dayNr + 3);\n\n\t// Store the millisecond value of the target date\n\tvar firstThursday = target.valueOf();\n\n\t// Set the target to the first thursday of the year\n\n\t// First set the target to january first\n\ttarget.setUTCMonth(0, 1);\n\n\t// Not a thursday? Correct the date to the next thursday\n\tif (target.getUTCDay() != 4) {\n\t\ttarget.setUTCMonth(0, 1 + ((4 - target.getUTCDay()) + 7) % 7);\n\t}\n\n\t// The weeknumber is the number of weeks between the  first thursday of the\n\t// year and the thursday in the target week.\n\t// 604800000 = 7 * 24 * 3600 * 1000\n\treturn 1 + Math.ceil((firstThursday - target) / 604800000);\n}\n\n/**\n * Exports the Calendar\n */\nmodule.exports = { Calendar: Calendar };\n"]},"metadata":{},"sourceType":"script"}