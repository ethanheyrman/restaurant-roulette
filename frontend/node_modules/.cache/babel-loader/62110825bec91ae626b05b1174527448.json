{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';\n\nvar _templateObject = _taggedTemplateLiteral(['\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  '], ['\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  ']),\n    _templateObject2 = _taggedTemplateLiteral(['\\n    to { transform: rotate(360deg); }\\n  '], ['\\n    to { transform: rotate(360deg); }\\n  ']),\n    _templateObject3 = _taggedTemplateLiteral(['\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n  '], ['\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n  ']),\n    _templateObject4 = _taggedTemplateLiteral(['\\n    from { stroke-dashoffset: ', 'px; }\\n    to { stroke-dashoffset: ', 'px; }\\n  '], ['\\n    from { stroke-dashoffset: ', 'px; }\\n    to { stroke-dashoffset: ', 'px; }\\n  ']),\n    _templateObject5 = _taggedTemplateLiteral(['\\n  ', ';\\n'], ['\\n  ', ';\\n']),\n    _templateObject6 = _taggedTemplateLiteral(['\\n      animation: ', ';\\n      fill: none;\\n      stroke: ', ';\\n      stroke-dasharray: ', 'px;\\n      stroke-dashoffset: ', 'px;\\n      stroke-linecap: round;\\n      stroke-width: ', 'px;\\n      transform-origin: center;\\n    '], ['\\n      animation: ', ';\\n      fill: none;\\n      stroke: ', ';\\n      stroke-dasharray: ', 'px;\\n      stroke-dashoffset: ', 'px;\\n      stroke-linecap: round;\\n      stroke-width: ', 'px;\\n      transform-origin: center;\\n    ']);\n\nimport styled, { css, keyframes } from 'styled-components';\nimport { colors, themed } from '@atlaskit/theme';\nimport { SIZES_MAP } from './constants';\n\nvar getStrokeWidth = function getStrokeWidth(size) {\n  return Math.round(size / 10);\n};\n\nvar getStrokeCircumference = function getStrokeCircumference(size) {\n  var strokeWidth = getStrokeWidth(size);\n  var strokeRadius = size / 2 - strokeWidth / 2;\n  return Math.PI * strokeRadius * 2;\n};\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to dynamic keyframes when we upgrade to styled components v2\n */\n\n\nvar keyframeNames = {\n  noop: keyframes(_templateObject),\n  rotate: keyframes(_templateObject2),\n  enterOpacity: keyframes(_templateObject3),\n  smallEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.small), getStrokeCircumference(SIZES_MAP.small) * 0.8),\n  mediumEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.medium), getStrokeCircumference(SIZES_MAP.medium) * 0.8),\n  largeEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.large), getStrokeCircumference(SIZES_MAP.large) * 0.8),\n  xlargeEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.xlarge), getStrokeCircumference(SIZES_MAP.xlarge) * 0.8)\n};\n/* If a standard size is used, we can use one of our statically defined keyframes, otherwise\n * we're forced to dynamically create the keyframe and incur a performance cost.\n */\n\nvar getEnterStrokeKeyframe = function getEnterStrokeKeyframe(size) {\n  var standardSizeName = _Object$keys(SIZES_MAP).find(function (sizeName) {\n    return size === SIZES_MAP[sizeName];\n  });\n\n  if (standardSizeName) {\n    return keyframeNames[standardSizeName + 'EnterStroke'];\n  }\n\n  var circumference = getStrokeCircumference(size);\n  return keyframes(_templateObject4, circumference, circumference * 0.8);\n};\n\nvar spinnerColor = themed({\n  light: colors.N500,\n  dark: colors.N0\n});\nvar spinnerColorInverted = themed({\n  light: colors.N0,\n  dark: colors.N0\n});\n\nvar getStrokeColor = function getStrokeColor(_ref // $FlowFixMe - theme is not found in props\n) {\n  var invertColor = _ref.invertColor,\n      props = _objectWithoutProperties(_ref, ['invertColor']);\n\n  return invertColor ? spinnerColorInverted(props) : spinnerColor(props);\n};\n\nexport { getStrokeColor };\nexport var svgStyles = css(_templateObject5, function (props) {\n  var circumference = getStrokeCircumference(props.size);\n  var idleRotation = '0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite ' + keyframeNames.rotate;\n  var spinUpStroke = '0.8s ease-in-out ' + getEnterStrokeKeyframe(props.size);\n  var spinUpOpacity = '0.2s ease-in-out ' + keyframeNames.enterOpacity;\n  var activeAnimations = [idleRotation];\n\n  if (props.phase === 'ENTER') {\n    activeAnimations.push(spinUpStroke, spinUpOpacity);\n  }\n\n  return css(_templateObject6, activeAnimations.join(', '), getStrokeColor, circumference, circumference * 0.8, getStrokeWidth(props.size));\n});\nvar Svg = styled.svg(_templateObject5, svgStyles);\nSvg.displayName = 'SpinnerSvg';\nexport default Svg;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/spinner/dist/esm/Spinner/styledSvg.js"],"names":["_objectWithoutProperties","_Object$keys","_taggedTemplateLiteral","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","styled","css","keyframes","colors","themed","SIZES_MAP","getStrokeWidth","size","Math","round","getStrokeCircumference","strokeWidth","strokeRadius","PI","keyframeNames","noop","rotate","enterOpacity","smallEnterStroke","small","mediumEnterStroke","medium","largeEnterStroke","large","xlargeEnterStroke","xlarge","getEnterStrokeKeyframe","standardSizeName","find","sizeName","circumference","spinnerColor","light","N500","dark","N0","spinnerColorInverted","getStrokeColor","_ref","invertColor","props","svgStyles","idleRotation","spinUpStroke","spinUpOpacity","activeAnimations","phase","push","join","Svg","svg","displayName"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';\n\nvar _templateObject = _taggedTemplateLiteral(['\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  '], ['\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  ']),\n    _templateObject2 = _taggedTemplateLiteral(['\\n    to { transform: rotate(360deg); }\\n  '], ['\\n    to { transform: rotate(360deg); }\\n  ']),\n    _templateObject3 = _taggedTemplateLiteral(['\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n  '], ['\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n  ']),\n    _templateObject4 = _taggedTemplateLiteral(['\\n    from { stroke-dashoffset: ', 'px; }\\n    to { stroke-dashoffset: ', 'px; }\\n  '], ['\\n    from { stroke-dashoffset: ', 'px; }\\n    to { stroke-dashoffset: ', 'px; }\\n  ']),\n    _templateObject5 = _taggedTemplateLiteral(['\\n  ', ';\\n'], ['\\n  ', ';\\n']),\n    _templateObject6 = _taggedTemplateLiteral(['\\n      animation: ', ';\\n      fill: none;\\n      stroke: ', ';\\n      stroke-dasharray: ', 'px;\\n      stroke-dashoffset: ', 'px;\\n      stroke-linecap: round;\\n      stroke-width: ', 'px;\\n      transform-origin: center;\\n    '], ['\\n      animation: ', ';\\n      fill: none;\\n      stroke: ', ';\\n      stroke-dasharray: ', 'px;\\n      stroke-dashoffset: ', 'px;\\n      stroke-linecap: round;\\n      stroke-width: ', 'px;\\n      transform-origin: center;\\n    ']);\n\nimport styled, { css, keyframes } from 'styled-components';\nimport { colors, themed } from '@atlaskit/theme';\n\nimport { SIZES_MAP } from './constants';\n\nvar getStrokeWidth = function getStrokeWidth(size) {\n  return Math.round(size / 10);\n};\n\nvar getStrokeCircumference = function getStrokeCircumference(size) {\n  var strokeWidth = getStrokeWidth(size);\n  var strokeRadius = size / 2 - strokeWidth / 2;\n  return Math.PI * strokeRadius * 2;\n};\n\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to dynamic keyframes when we upgrade to styled components v2\n */\nvar keyframeNames = {\n  noop: keyframes(_templateObject),\n  rotate: keyframes(_templateObject2),\n  enterOpacity: keyframes(_templateObject3),\n  smallEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.small), getStrokeCircumference(SIZES_MAP.small) * 0.8),\n  mediumEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.medium), getStrokeCircumference(SIZES_MAP.medium) * 0.8),\n  largeEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.large), getStrokeCircumference(SIZES_MAP.large) * 0.8),\n  xlargeEnterStroke: keyframes(_templateObject4, getStrokeCircumference(SIZES_MAP.xlarge), getStrokeCircumference(SIZES_MAP.xlarge) * 0.8)\n};\n\n/* If a standard size is used, we can use one of our statically defined keyframes, otherwise\n * we're forced to dynamically create the keyframe and incur a performance cost.\n */\nvar getEnterStrokeKeyframe = function getEnterStrokeKeyframe(size) {\n  var standardSizeName = _Object$keys(SIZES_MAP).find(function (sizeName) {\n    return size === SIZES_MAP[sizeName];\n  });\n  if (standardSizeName) {\n    return keyframeNames[standardSizeName + 'EnterStroke'];\n  }\n\n  var circumference = getStrokeCircumference(size);\n  return keyframes(_templateObject4, circumference, circumference * 0.8);\n};\n\nvar spinnerColor = themed({ light: colors.N500, dark: colors.N0 });\nvar spinnerColorInverted = themed({ light: colors.N0, dark: colors.N0 });\n\nvar getStrokeColor = function getStrokeColor(_ref\n// $FlowFixMe - theme is not found in props\n) {\n  var invertColor = _ref.invertColor,\n      props = _objectWithoutProperties(_ref, ['invertColor']);\n\n  return invertColor ? spinnerColorInverted(props) : spinnerColor(props);\n};\n\nexport { getStrokeColor };\nexport var svgStyles = css(_templateObject5, function (props) {\n  var circumference = getStrokeCircumference(props.size);\n\n  var idleRotation = '0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite ' + keyframeNames.rotate;\n\n  var spinUpStroke = '0.8s ease-in-out ' + getEnterStrokeKeyframe(props.size);\n\n  var spinUpOpacity = '0.2s ease-in-out ' + keyframeNames.enterOpacity;\n\n  var activeAnimations = [idleRotation];\n  if (props.phase === 'ENTER') {\n    activeAnimations.push(spinUpStroke, spinUpOpacity);\n  }\n\n  return css(_templateObject6, activeAnimations.join(', '), getStrokeColor, circumference, circumference * 0.8, getStrokeWidth(props.size));\n});\n\nvar Svg = styled.svg(_templateObject5, svgStyles);\nSvg.displayName = 'SpinnerSvg';\nexport default Svg;"]},"metadata":{},"sourceType":"module"}