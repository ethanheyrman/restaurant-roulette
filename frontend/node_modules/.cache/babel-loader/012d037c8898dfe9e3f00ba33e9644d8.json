{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar findFieldsToCompareTo = exports.findFieldsToCompareTo = function findFieldsToCompareTo(fieldsToFind, allFields) {\n  var targetFields = [];\n  typeof fieldsToFind.forEach === \"function\" && fieldsToFind.forEach(function (targetField) {\n    var target = allFields.find(function (currField) {\n      return targetField === currField.id;\n    });\n\n    if (!target) {\n      console.warn(\"Could not find field \" + targetField + \" to compare against\");\n    } else if (target.visible === true) {\n      // TODO: Only comparing against visible fields at the moment, but is there a case where\n      //       you might want to hide a value in a hidden field?\n      targetFields.push(target);\n    }\n  });\n  return targetFields;\n};\n\nvar isBigger = exports.isBigger = function isBigger(value, comparedTo) {\n  return compareSize(value, comparedTo, \"BIGGER\");\n};\n\nvar isSmaller = exports.isSmaller = function isSmaller(value, comparedTo) {\n  return compareSize(value, comparedTo, \"SMALLER\");\n};\n\nvar compareSize = exports.compareSize = function compareSize(value, comparedTo, type) {\n  var targetValue = parseFloat(value);\n  var compareValue = parseFloat(comparedTo.value);\n\n  if (targetValue === NaN || compareValue === NaN) {\n    return false;\n  } else if (type === \"BIGGER\") {\n    return targetValue > compareValue;\n  } else {\n    return targetValue < compareValue;\n  }\n};\n\nvar isLonger = exports.isLonger = function isLonger(value, comparedTo) {\n  return compareLength(value, comparedTo, \"LONGER\");\n};\n\nvar isShorter = exports.isShorter = function isShorter(value, comparedTo) {\n  return compareLength(value, comparedTo, \"SHORTER\");\n};\n\nvar compareLength = exports.compareLength = function compareLength(value, comparedTo, type) {\n  var valueLength = value ? value.toString().length : undefined;\n  var compareLength = comparedTo.value ? comparedTo.value.toString().length : undefined;\n\n  if (valueLength === undefined || compareLength === undefined) {\n    return false;\n  } else if (type === \"LONGER\") {\n    return valueLength > compareLength;\n  } else {\n    return valueLength < compareLength;\n  }\n};\n\nvar comparedTo = exports.comparedTo = function comparedTo(_ref) {\n  var value = _ref.value,\n      _ref$fields = _ref.fields,\n      fields = _ref$fields === undefined ? [] : _ref$fields,\n      _ref$allFields = _ref.allFields,\n      allFields = _ref$allFields === undefined ? [] : _ref$allFields,\n      _ref$is = _ref.is,\n      is = _ref$is === undefined ? \"BIGGER\" : _ref$is,\n      message = _ref.message;\n  var targetFields = findFieldsToCompareTo(fields, allFields);\n\n  switch (is) {\n    case \"BIGGER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isBigger(value, targetField);\n        }) ? undefined : message || \"Not the biggest field\";\n      }\n\n    case \"SMALLER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isSmaller(value, targetField);\n        }) ? undefined : message || \"Not the smallest field\";\n      }\n\n    case \"LONGER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isLonger(value, targetField);\n        }) ? undefined : message || \"Not the longer field\";\n      }\n\n    case \"SHORTER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isShorter(value, targetField);\n        }) ? undefined : message || \"Not the shortest field\";\n      }\n\n    default:\n      return;\n  }\n};\n\nvar lengthIsGreaterThan = exports.lengthIsGreaterThan = function lengthIsGreaterThan(_ref2) {\n  var value = _ref2.value,\n      length = _ref2.length,\n      message = _ref2.message;\n\n  if (isNaN(length) || (value || \"\").length > length) {\n    return;\n  } else {\n    return message || \"Should have more than \" + length + \" characters\";\n  }\n};\n\nvar lengthIsLessThan = exports.lengthIsLessThan = function lengthIsLessThan(_ref3) {\n  var value = _ref3.value,\n      length = _ref3.length,\n      message = _ref3.message;\n\n  if (isNaN(length) || (value || \"\").length < length) {\n    return;\n  } else {\n    return message || \"Should have more than \" + length + \" characters\";\n  }\n}; // TODO: Consider option for inverting rule...\n\n\nvar matchesRegEx = exports.matchesRegEx = function matchesRegEx(_ref4) {\n  var value = _ref4.value,\n      _ref4$pattern = _ref4.pattern,\n      pattern = _ref4$pattern === undefined ? \".*\" : _ref4$pattern,\n      message = _ref4.message;\n  var regExObj = new RegExp(pattern);\n\n  if (!regExObj.test(value)) {\n    return message || \"Invalid input provided\"; // <= Terrible message!\n  }\n};\n\nvar getDefaultNumericalRangeErrorMessages = exports.getDefaultNumericalRangeErrorMessages = function getDefaultNumericalRangeErrorMessages(min, max) {\n  if (typeof min !== \"undefined\" && typeof max !== \"undefined\") {\n    return \"Value cannot be less than \" + min + \" or greater than \" + max;\n  } else if (typeof min !== \"undefined\") {\n    return \"Value cannot be less than \" + min;\n  } else if (typeof max !== \"undefined\") {\n    return \"Value cannot be greater than \" + max;\n  }\n};\n\nvar fallsWithinNumericalRange = exports.fallsWithinNumericalRange = function fallsWithinNumericalRange(_ref5) {\n  var value = _ref5.value,\n      min = _ref5.min,\n      max = _ref5.max,\n      required = _ref5.required,\n      message = _ref5.message;\n  var parsedValue = parseFloat(value);\n\n  if (typeof value === \"undefined\" || value === null || typeof value === \"string\" && !value.length) {\n    return undefined;\n  }\n\n  if (isNaN(parsedValue)) {\n    return message || \"Value must be a number\";\n  }\n\n  if (typeof min !== \"undefined\" && value < min) {\n    return message || getDefaultNumericalRangeErrorMessages(min, max);\n  }\n\n  if (typeof max !== \"undefined\" && value > max) {\n    return message || getDefaultNumericalRangeErrorMessages(min, max);\n  }\n};\n\nvar isNotValue = exports.isNotValue = function isNotValue(_ref6) {\n  var value = _ref6.value,\n      values = _ref6.values,\n      message = _ref6.message;\n\n  if (values.some(function (currValue) {\n    return currValue === value;\n  })) {\n    return message || \"Unacceptable value provided\";\n  }\n};\n\nvar isValue = exports.isValue = function isValue(_ref7) {\n  var value = _ref7.value,\n      values = _ref7.values,\n      message = _ref7.message;\n\n  if (!values.some(function (currValue) {\n    return currValue === value;\n  })) {\n    return message || \"Unacceptable value provided\";\n  }\n};\n\nvar runValidator = exports.runValidator = function runValidator(validatorKey, validWhen, valueToTest, allFields) {\n  var validator = validators[validatorKey];\n\n  if (typeof validator === \"function\") {\n    var validatorConfig = _extends({}, validWhen[validatorKey], {\n      value: valueToTest,\n      allFields: allFields\n    });\n\n    var message = validator(validatorConfig);\n    return message === undefined;\n  } else {\n    return false;\n  }\n};\n\nvar checkConditions = function checkConditions(condition, value, allFields, type) {\n  var valueToTest = void 0; // Don't initialise to current field value in case field doesn't exist\n\n  if (condition.field) {\n    var targetField = allFields.find(function (field) {\n      return condition.field === field.id;\n    });\n\n    if (targetField) {\n      valueToTest = targetField.value;\n    }\n  } else {\n    valueToTest = value;\n  }\n\n  var field = condition.field,\n      validWhen = _objectWithoutProperties(condition, [\"field\"]);\n\n  switch (type) {\n    case \"some\":\n      {\n        return Object.keys(validWhen).some(function (validatorKey) {\n          return runValidator(validatorKey, condition, valueToTest, allFields);\n        });\n      }\n\n    default:\n      {\n        return Object.keys(validWhen).every(function (validatorKey) {\n          return runValidator(validatorKey, condition, valueToTest, allFields);\n        });\n      }\n  }\n};\n\nexports.checkConditions = checkConditions;\n\nvar noneAreTrue = exports.noneAreTrue = function noneAreTrue(_ref8) {\n  var value = _ref8.value,\n      allFields = _ref8.allFields,\n      message = _ref8.message,\n      conditions = _ref8.conditions;\n  var allConditionsPass = conditions.some(function (condition) {\n    return checkConditions(condition, value, allFields, \"some\");\n  });\n  return allConditionsPass ? message : undefined;\n};\n\nvar someAreTrue = exports.someAreTrue = function someAreTrue(_ref9) {\n  var value = _ref9.value,\n      allFields = _ref9.allFields,\n      message = _ref9.message,\n      conditions = _ref9.conditions;\n  var allConditionsPass = conditions.some(function (condition) {\n    return checkConditions(condition, value, allFields, \"some\");\n  });\n  return allConditionsPass ? undefined : message;\n};\n\nvar allAreTrue = exports.allAreTrue = function allAreTrue(_ref10) {\n  var value = _ref10.value,\n      allFields = _ref10.allFields,\n      message = _ref10.message,\n      conditions = _ref10.conditions;\n  var allConditionsPass = conditions.every(function (condition) {\n    return checkConditions(condition, value, allFields, \"all\");\n  });\n  return allConditionsPass ? undefined : message;\n};\n\nvar validators = exports.validators = {\n  allAreTrue: allAreTrue,\n  comparedTo: comparedTo,\n  fallsWithinNumericalRange: fallsWithinNumericalRange,\n  is: isValue,\n  isNot: isNotValue,\n  lengthIsGreaterThan: lengthIsGreaterThan,\n  lengthIsLessThan: lengthIsLessThan,\n  matchesRegEx: matchesRegEx,\n  noneAreTrue: noneAreTrue,\n  someAreTrue: someAreTrue\n};\n\nvar hasValue = exports.hasValue = function hasValue(value) {\n  var valueIsEmptyArray = Array.isArray(value) && value.length === 0;\n  var hasValue = (value || value === 0 || value === false) && !valueIsEmptyArray;\n  return hasValue;\n};\n\nvar getValueFromField = exports.getValueFromField = function getValueFromField(field) {\n  var _field$trimValue = field.trimValue,\n      trimValue = _field$trimValue === undefined ? false : _field$trimValue,\n      value = field.value;\n  var trimmedValue = value;\n\n  if (trimValue && trimmedValue && typeof trimmedValue.trim === \"function\") {\n    trimmedValue = trimmedValue.trim();\n  }\n\n  return trimmedValue;\n};\n\nvar validateField = exports.validateField = function validateField(field, fields, showValidationBeforeTouched, validationHandler, parentContext) {\n  var required = field.required,\n      visible = field.visible,\n      _field$validWhen = field.validWhen,\n      validWhen = _field$validWhen === undefined ? {} : _field$validWhen,\n      _field$touched = field.touched,\n      touched = _field$touched === undefined ? false : _field$touched;\n  var isValid = true;\n  var errorMessages = [];\n\n  var formattedErrorMessage = function formattedErrorMessage() {\n    if (errorMessages.length === 0) {\n      return \"\";\n    } else if (errorMessages.length === 1) {\n      // Don't add punctuation on singular error messages.\n      return errorMessages[0];\n    } else {\n      // Reverse through list of error messages to preserve order\n      var formattedErrorMessages = \"\";\n      errorMessages.slice().reverse().forEach(function (message) {\n        var lastChar = message.slice(-1);\n\n        if (lastChar === \".\" || lastChar === \"!\" || lastChar === \"?\") {\n          formattedErrorMessages = message + \" \" + formattedErrorMessages;\n        } else {\n          formattedErrorMessages = message + \". \" + formattedErrorMessages;\n        }\n      }); // Remove trailing space\n\n      return formattedErrorMessages.slice(0, -1);\n    }\n  };\n\n  if (visible) {\n    var value = getValueFromField(field);\n    var valueProvided = hasValue(value);\n\n    if (required) {\n      if (!valueProvided) {\n        isValid = valueProvided;\n        var _field$missingValueMe = field.missingValueMessage,\n            missingValueMessage = _field$missingValueMe === undefined ? \"A value must be provided\" : _field$missingValueMe;\n        errorMessages.push(missingValueMessage);\n      }\n    } else if (!valueProvided) {\n      // do not run all validations if the field is empty\n      return Object.assign({}, field, {\n        isValid: true,\n        isDiscretelyInvalid: !isValid,\n        errorMessages: errorMessages.length ? formattedErrorMessage() : \"\"\n      });\n    }\n\n    isValid = Object.keys(validWhen).reduce(function (allValidatorsPass, validator) {\n      if (typeof validators[validator] === \"function\") {\n        var validationConfig = _extends({}, validWhen[validator], {\n          value: value,\n          allFields: fields\n        }); // $FlowFixMe - covered by tests\n\n\n        var message = validators[validator](validationConfig);\n\n        if (message) {\n          allValidatorsPass = false;\n          errorMessages.push(message);\n        }\n      } else {\n        console.warn(\"The requested validator does not exist\", validator);\n      }\n\n      return allValidatorsPass;\n    }, isValid) && isValid;\n  }\n\n  if (validationHandler) {\n    var message = validationHandler(field, fields, parentContext);\n\n    if (message) {\n      isValid = false;\n      errorMessages.push(message);\n    }\n  }\n\n  if (!showValidationBeforeTouched && !touched) {\n    return Object.assign({}, field, {\n      isValid: true,\n      isDiscretelyInvalid: !isValid,\n      errorMessages: \"\"\n    });\n  }\n\n  return Object.assign({}, field, {\n    isValid: isValid,\n    isDiscretelyInvalid: !isValid,\n    errorMessages: formattedErrorMessage()\n  });\n};\n\nvar validateAllFields = exports.validateAllFields = function validateAllFields(_ref11) {\n  var fields = _ref11.fields,\n      showValidationBeforeTouched = _ref11.showValidationBeforeTouched,\n      validationHandler = _ref11.validationHandler,\n      parentContext = _ref11.parentContext;\n  var validatedFields = fields.map(function (field) {\n    return validateField(field, fields, showValidationBeforeTouched, validationHandler, parentContext);\n  });\n  return validatedFields;\n};","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/react-forms-processor/dist/utilities/validation.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","findFieldsToCompareTo","fieldsToFind","allFields","targetFields","forEach","targetField","find","currField","id","console","warn","visible","push","isBigger","comparedTo","compareSize","isSmaller","type","targetValue","parseFloat","compareValue","NaN","isLonger","compareLength","isShorter","valueLength","toString","undefined","_ref","_ref$fields","fields","_ref$allFields","_ref$is","is","message","every","lengthIsGreaterThan","_ref2","isNaN","lengthIsLessThan","_ref3","matchesRegEx","_ref4","_ref4$pattern","pattern","regExObj","RegExp","test","getDefaultNumericalRangeErrorMessages","min","max","fallsWithinNumericalRange","_ref5","required","parsedValue","isNotValue","_ref6","values","some","currValue","isValue","_ref7","runValidator","validatorKey","validWhen","valueToTest","validator","validators","validatorConfig","checkConditions","condition","field","noneAreTrue","_ref8","conditions","allConditionsPass","someAreTrue","_ref9","allAreTrue","_ref10","isNot","hasValue","valueIsEmptyArray","Array","isArray","getValueFromField","_field$trimValue","trimValue","trimmedValue","trim","validateField","showValidationBeforeTouched","validationHandler","parentContext","_field$validWhen","_field$touched","touched","isValid","errorMessages","formattedErrorMessage","formattedErrorMessages","slice","reverse","lastChar","valueProvided","_field$missingValueMe","missingValueMessage","isDiscretelyInvalid","reduce","allValidatorsPass","validationConfig","validateAllFields","_ref11","validatedFields","map"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar findFieldsToCompareTo = exports.findFieldsToCompareTo = function findFieldsToCompareTo(fieldsToFind, allFields) {\n  var targetFields = [];\n\n  typeof fieldsToFind.forEach === \"function\" && fieldsToFind.forEach(function (targetField) {\n    var target = allFields.find(function (currField) {\n      return targetField === currField.id;\n    });\n    if (!target) {\n      console.warn(\"Could not find field \" + targetField + \" to compare against\");\n    } else if (target.visible === true) {\n      // TODO: Only comparing against visible fields at the moment, but is there a case where\n      //       you might want to hide a value in a hidden field?\n      targetFields.push(target);\n    }\n  });\n\n  return targetFields;\n};\nvar isBigger = exports.isBigger = function isBigger(value, comparedTo) {\n  return compareSize(value, comparedTo, \"BIGGER\");\n};\n\nvar isSmaller = exports.isSmaller = function isSmaller(value, comparedTo) {\n  return compareSize(value, comparedTo, \"SMALLER\");\n};\n\nvar compareSize = exports.compareSize = function compareSize(value, comparedTo, type) {\n  var targetValue = parseFloat(value);\n  var compareValue = parseFloat(comparedTo.value);\n  if (targetValue === NaN || compareValue === NaN) {\n    return false;\n  } else if (type === \"BIGGER\") {\n    return targetValue > compareValue;\n  } else {\n    return targetValue < compareValue;\n  }\n};\n\nvar isLonger = exports.isLonger = function isLonger(value, comparedTo) {\n  return compareLength(value, comparedTo, \"LONGER\");\n};\nvar isShorter = exports.isShorter = function isShorter(value, comparedTo) {\n  return compareLength(value, comparedTo, \"SHORTER\");\n};\n\nvar compareLength = exports.compareLength = function compareLength(value, comparedTo, type) {\n  var valueLength = value ? value.toString().length : undefined;\n  var compareLength = comparedTo.value ? comparedTo.value.toString().length : undefined;\n  if (valueLength === undefined || compareLength === undefined) {\n    return false;\n  } else if (type === \"LONGER\") {\n    return valueLength > compareLength;\n  } else {\n    return valueLength < compareLength;\n  }\n};\n\nvar comparedTo = exports.comparedTo = function comparedTo(_ref) {\n  var value = _ref.value,\n      _ref$fields = _ref.fields,\n      fields = _ref$fields === undefined ? [] : _ref$fields,\n      _ref$allFields = _ref.allFields,\n      allFields = _ref$allFields === undefined ? [] : _ref$allFields,\n      _ref$is = _ref.is,\n      is = _ref$is === undefined ? \"BIGGER\" : _ref$is,\n      message = _ref.message;\n\n  var targetFields = findFieldsToCompareTo(fields, allFields);\n\n  switch (is) {\n    case \"BIGGER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isBigger(value, targetField);\n        }) ? undefined : message || \"Not the biggest field\";\n      }\n\n    case \"SMALLER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isSmaller(value, targetField);\n        }) ? undefined : message || \"Not the smallest field\";\n      }\n\n    case \"LONGER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isLonger(value, targetField);\n        }) ? undefined : message || \"Not the longer field\";\n      }\n\n    case \"SHORTER\":\n      {\n        return targetFields.every(function (targetField) {\n          return isShorter(value, targetField);\n        }) ? undefined : message || \"Not the shortest field\";\n      }\n\n    default:\n      return;\n  }\n};\n\nvar lengthIsGreaterThan = exports.lengthIsGreaterThan = function lengthIsGreaterThan(_ref2) {\n  var value = _ref2.value,\n      length = _ref2.length,\n      message = _ref2.message;\n\n  if (isNaN(length) || (value || \"\").length > length) {\n    return;\n  } else {\n    return message || \"Should have more than \" + length + \" characters\";\n  }\n};\n\nvar lengthIsLessThan = exports.lengthIsLessThan = function lengthIsLessThan(_ref3) {\n  var value = _ref3.value,\n      length = _ref3.length,\n      message = _ref3.message;\n\n  if (isNaN(length) || (value || \"\").length < length) {\n    return;\n  } else {\n    return message || \"Should have more than \" + length + \" characters\";\n  }\n};\n\n// TODO: Consider option for inverting rule...\nvar matchesRegEx = exports.matchesRegEx = function matchesRegEx(_ref4) {\n  var value = _ref4.value,\n      _ref4$pattern = _ref4.pattern,\n      pattern = _ref4$pattern === undefined ? \".*\" : _ref4$pattern,\n      message = _ref4.message;\n\n  var regExObj = new RegExp(pattern);\n  if (!regExObj.test(value)) {\n    return message || \"Invalid input provided\"; // <= Terrible message!\n  }\n};\n\nvar getDefaultNumericalRangeErrorMessages = exports.getDefaultNumericalRangeErrorMessages = function getDefaultNumericalRangeErrorMessages(min, max) {\n  if (typeof min !== \"undefined\" && typeof max !== \"undefined\") {\n    return \"Value cannot be less than \" + min + \" or greater than \" + max;\n  } else if (typeof min !== \"undefined\") {\n    return \"Value cannot be less than \" + min;\n  } else if (typeof max !== \"undefined\") {\n    return \"Value cannot be greater than \" + max;\n  }\n};\n\nvar fallsWithinNumericalRange = exports.fallsWithinNumericalRange = function fallsWithinNumericalRange(_ref5) {\n  var value = _ref5.value,\n      min = _ref5.min,\n      max = _ref5.max,\n      required = _ref5.required,\n      message = _ref5.message;\n\n  var parsedValue = parseFloat(value);\n\n  if (typeof value === \"undefined\" || value === null || typeof value === \"string\" && !value.length) {\n    return undefined;\n  }\n\n  if (isNaN(parsedValue)) {\n    return message || \"Value must be a number\";\n  }\n  if (typeof min !== \"undefined\" && value < min) {\n    return message || getDefaultNumericalRangeErrorMessages(min, max);\n  }\n  if (typeof max !== \"undefined\" && value > max) {\n    return message || getDefaultNumericalRangeErrorMessages(min, max);\n  }\n};\n\nvar isNotValue = exports.isNotValue = function isNotValue(_ref6) {\n  var value = _ref6.value,\n      values = _ref6.values,\n      message = _ref6.message;\n\n  if (values.some(function (currValue) {\n    return currValue === value;\n  })) {\n    return message || \"Unacceptable value provided\";\n  }\n};\n\nvar isValue = exports.isValue = function isValue(_ref7) {\n  var value = _ref7.value,\n      values = _ref7.values,\n      message = _ref7.message;\n\n  if (!values.some(function (currValue) {\n    return currValue === value;\n  })) {\n    return message || \"Unacceptable value provided\";\n  }\n};\n\nvar runValidator = exports.runValidator = function runValidator(validatorKey, validWhen, valueToTest, allFields) {\n  var validator = validators[validatorKey];\n  if (typeof validator === \"function\") {\n    var validatorConfig = _extends({}, validWhen[validatorKey], {\n      value: valueToTest,\n      allFields: allFields\n    });\n    var message = validator(validatorConfig);\n    return message === undefined;\n  } else {\n    return false;\n  }\n};\n\nvar checkConditions = function checkConditions(condition, value, allFields, type) {\n  var valueToTest = void 0; // Don't initialise to current field value in case field doesn't exist\n  if (condition.field) {\n    var targetField = allFields.find(function (field) {\n      return condition.field === field.id;\n    });\n    if (targetField) {\n      valueToTest = targetField.value;\n    }\n  } else {\n    valueToTest = value;\n  }\n\n  var field = condition.field,\n      validWhen = _objectWithoutProperties(condition, [\"field\"]);\n\n  switch (type) {\n    case \"some\":\n      {\n        return Object.keys(validWhen).some(function (validatorKey) {\n          return runValidator(validatorKey, condition, valueToTest, allFields);\n        });\n      }\n\n    default:\n      {\n        return Object.keys(validWhen).every(function (validatorKey) {\n          return runValidator(validatorKey, condition, valueToTest, allFields);\n        });\n      }\n  }\n};\n\nexports.checkConditions = checkConditions;\nvar noneAreTrue = exports.noneAreTrue = function noneAreTrue(_ref8) {\n  var value = _ref8.value,\n      allFields = _ref8.allFields,\n      message = _ref8.message,\n      conditions = _ref8.conditions;\n\n  var allConditionsPass = conditions.some(function (condition) {\n    return checkConditions(condition, value, allFields, \"some\");\n  });\n\n  return allConditionsPass ? message : undefined;\n};\n\nvar someAreTrue = exports.someAreTrue = function someAreTrue(_ref9) {\n  var value = _ref9.value,\n      allFields = _ref9.allFields,\n      message = _ref9.message,\n      conditions = _ref9.conditions;\n\n  var allConditionsPass = conditions.some(function (condition) {\n    return checkConditions(condition, value, allFields, \"some\");\n  });\n\n  return allConditionsPass ? undefined : message;\n};\n\nvar allAreTrue = exports.allAreTrue = function allAreTrue(_ref10) {\n  var value = _ref10.value,\n      allFields = _ref10.allFields,\n      message = _ref10.message,\n      conditions = _ref10.conditions;\n\n  var allConditionsPass = conditions.every(function (condition) {\n    return checkConditions(condition, value, allFields, \"all\");\n  });\n\n  return allConditionsPass ? undefined : message;\n};\n\nvar validators = exports.validators = {\n  allAreTrue: allAreTrue,\n  comparedTo: comparedTo,\n  fallsWithinNumericalRange: fallsWithinNumericalRange,\n  is: isValue,\n  isNot: isNotValue,\n  lengthIsGreaterThan: lengthIsGreaterThan,\n  lengthIsLessThan: lengthIsLessThan,\n  matchesRegEx: matchesRegEx,\n  noneAreTrue: noneAreTrue,\n  someAreTrue: someAreTrue\n};\n\nvar hasValue = exports.hasValue = function hasValue(value) {\n  var valueIsEmptyArray = Array.isArray(value) && value.length === 0;\n  var hasValue = (value || value === 0 || value === false) && !valueIsEmptyArray;\n  return hasValue;\n};\n\nvar getValueFromField = exports.getValueFromField = function getValueFromField(field) {\n  var _field$trimValue = field.trimValue,\n      trimValue = _field$trimValue === undefined ? false : _field$trimValue,\n      value = field.value;\n\n  var trimmedValue = value;\n  if (trimValue && trimmedValue && typeof trimmedValue.trim === \"function\") {\n    trimmedValue = trimmedValue.trim();\n  }\n  return trimmedValue;\n};\n\nvar validateField = exports.validateField = function validateField(field, fields, showValidationBeforeTouched, validationHandler, parentContext) {\n  var required = field.required,\n      visible = field.visible,\n      _field$validWhen = field.validWhen,\n      validWhen = _field$validWhen === undefined ? {} : _field$validWhen,\n      _field$touched = field.touched,\n      touched = _field$touched === undefined ? false : _field$touched;\n\n  var isValid = true;\n  var errorMessages = [];\n  var formattedErrorMessage = function formattedErrorMessage() {\n    if (errorMessages.length === 0) {\n      return \"\";\n    } else if (errorMessages.length === 1) {\n      // Don't add punctuation on singular error messages.\n      return errorMessages[0];\n    } else {\n      // Reverse through list of error messages to preserve order\n      var formattedErrorMessages = \"\";\n      errorMessages.slice().reverse().forEach(function (message) {\n        var lastChar = message.slice(-1);\n        if (lastChar === \".\" || lastChar === \"!\" || lastChar === \"?\") {\n          formattedErrorMessages = message + \" \" + formattedErrorMessages;\n        } else {\n          formattedErrorMessages = message + \". \" + formattedErrorMessages;\n        }\n      });\n      // Remove trailing space\n      return formattedErrorMessages.slice(0, -1);\n    }\n  };\n\n  if (visible) {\n    var value = getValueFromField(field);\n    var valueProvided = hasValue(value);\n    if (required) {\n      if (!valueProvided) {\n        isValid = valueProvided;\n        var _field$missingValueMe = field.missingValueMessage,\n            missingValueMessage = _field$missingValueMe === undefined ? \"A value must be provided\" : _field$missingValueMe;\n\n        errorMessages.push(missingValueMessage);\n      }\n    } else if (!valueProvided) {\n      // do not run all validations if the field is empty\n      return Object.assign({}, field, {\n        isValid: true,\n        isDiscretelyInvalid: !isValid,\n        errorMessages: errorMessages.length ? formattedErrorMessage() : \"\"\n      });\n    }\n\n    isValid = Object.keys(validWhen).reduce(function (allValidatorsPass, validator) {\n      if (typeof validators[validator] === \"function\") {\n        var validationConfig = _extends({}, validWhen[validator], {\n          value: value,\n          allFields: fields\n        });\n        // $FlowFixMe - covered by tests\n        var message = validators[validator](validationConfig);\n        if (message) {\n          allValidatorsPass = false;\n          errorMessages.push(message);\n        }\n      } else {\n        console.warn(\"The requested validator does not exist\", validator);\n      }\n\n      return allValidatorsPass;\n    }, isValid) && isValid;\n  }\n  if (validationHandler) {\n    var message = validationHandler(field, fields, parentContext);\n    if (message) {\n      isValid = false;\n      errorMessages.push(message);\n    }\n  }\n\n  if (!showValidationBeforeTouched && !touched) {\n    return Object.assign({}, field, {\n      isValid: true,\n      isDiscretelyInvalid: !isValid,\n      errorMessages: \"\"\n    });\n  }\n\n  return Object.assign({}, field, {\n    isValid: isValid,\n    isDiscretelyInvalid: !isValid,\n    errorMessages: formattedErrorMessage()\n  });\n};\n\nvar validateAllFields = exports.validateAllFields = function validateAllFields(_ref11) {\n  var fields = _ref11.fields,\n      showValidationBeforeTouched = _ref11.showValidationBeforeTouched,\n      validationHandler = _ref11.validationHandler,\n      parentContext = _ref11.parentContext;\n\n  var validatedFields = fields.map(function (field) {\n    return validateField(field, fields, showValidationBeforeTouched, validationHandler, parentContext);\n  });\n  return validatedFields;\n};"]},"metadata":{},"sourceType":"script"}