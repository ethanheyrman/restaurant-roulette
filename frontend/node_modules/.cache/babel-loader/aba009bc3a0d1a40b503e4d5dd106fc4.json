{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport Spinner from '@atlaskit/spinner';\nvar appearances = ['primary', 'danger'];\n\nvar LoadingSpinner =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LoadingSpinner, _super);\n\n  function LoadingSpinner() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.invertSpinner = function () {\n      var _a = _this.props,\n          appearance = _a.appearance,\n          isSelected = _a.isSelected,\n          isDisabled = _a.isDisabled;\n\n      if (isSelected) {\n        return true;\n      }\n\n      if (isDisabled) {\n        return false;\n      }\n\n      if (appearance !== undefined) {\n        if (appearances.indexOf(appearance) !== -1) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    return _this;\n  }\n\n  LoadingSpinner.prototype.render = function () {\n    var _a = this.props,\n        spacing = _a.spacing,\n        styles = _a.styles;\n    var spinnerSize = spacing !== 'default' ? 'small' : 'medium';\n    return jsx(\"div\", {\n      css: styles\n    }, jsx(Spinner, {\n      size: spinnerSize,\n      invertColor: this.invertSpinner()\n    }));\n  };\n\n  return LoadingSpinner;\n}(React.Component);\n\nexport default LoadingSpinner;","map":{"version":3,"sources":["../src/components/LoadingSpinner.tsx"],"names":[],"mappings":";AAAA;;AACA,SAAS,GAAT,QAAoB,eAApB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,OAAP,MAAoB,mBAApB;AAEA,IAAM,WAAW,GAAa,CAAC,SAAD,EAAY,QAAZ,CAA9B;;AAUA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAA5C,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACE,IAAA,KAAA,CAAA,aAAA,GAAgB,YAAA;AACR,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,UAAA,GAAA,EAAA,CAAA,UAAF;AAAA,UAAc,UAAA,GAAA,EAAA,CAAA,UAAd;AAAA,UAA0B,UAAA,GAAA,EAAA,CAAA,UAA1B;;AACN,UAAI,UAAJ,EAAgB;AACd,eAAO,IAAP;AACD;;AACD,UAAI,UAAJ,EAAgB;AACd,eAAO,KAAP;AACD;;AACD,UAAI,UAAU,KAAK,SAAnB,EAA8B;AAC5B,YAAI,WAAW,CAAC,OAAZ,CAAoB,UAApB,MAAoC,CAAC,CAAzC,EAA4C;AAC1C,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAdD;;;AA0BD;;AAVC,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,QAAW,MAAA,GAAA,EAAA,CAAA,MAAX;AACN,QAAI,WAAW,GAAG,OAAO,KAAK,SAAZ,GAAwB,OAAxB,GAAkC,QAApD;AAEA,WACE,GAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAE;AAAV,KAAA,EACE,GAAA,CAAC,OAAD,EAAQ;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,WAAW,EAAE,KAAK,aAAL;AAAjC,KAAR,CADF,CADF;AAKD,GATD;;AAUF,SAAA,cAAA;AAAC,CA3BD,CAA4C,KAAK,CAAC,SAAlD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport Spinner from '@atlaskit/spinner';\nvar appearances = ['primary', 'danger'];\nvar LoadingSpinner = /** @class */ (function (_super) {\n    tslib_1.__extends(LoadingSpinner, _super);\n    function LoadingSpinner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.invertSpinner = function () {\n            var _a = _this.props, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;\n            if (isSelected) {\n                return true;\n            }\n            if (isDisabled) {\n                return false;\n            }\n            if (appearance !== undefined) {\n                if (appearances.indexOf(appearance) !== -1) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        return _this;\n    }\n    LoadingSpinner.prototype.render = function () {\n        var _a = this.props, spacing = _a.spacing, styles = _a.styles;\n        var spinnerSize = spacing !== 'default' ? 'small' : 'medium';\n        return (jsx(\"div\", { css: styles },\n            jsx(Spinner, { size: spinnerSize, invertColor: this.invertSpinner() })));\n    };\n    return LoadingSpinner;\n}(React.Component));\nexport default LoadingSpinner;\n//# sourceMappingURL=LoadingSpinner.js.map"]},"metadata":{},"sourceType":"module"}