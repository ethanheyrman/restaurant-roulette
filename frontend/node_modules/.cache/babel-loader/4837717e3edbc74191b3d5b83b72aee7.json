{"ast":null,"code":"import { css } from 'styled-components';\nimport * as colors from './colors';\nimport * as elevation from './elevation';\nimport * as typography from './typography';\nimport * as math from './utils/math';\nimport getTheme from './utils/getTheme';\nimport themed from './utils/themed';\nimport AtlaskitThemeProvider from './components/AtlaskitThemeProvider';\nexport { colors, elevation, typography, math, getTheme, themed, AtlaskitThemeProvider };\nexport { default as Appearance } from './components/Appearance'; // backwards-compatible export with old Atlaskit case\n\nexport var AtlasKitThemeProvider = AtlaskitThemeProvider;\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\n\nexport var borderRadius = function borderRadius() {\n  return 3;\n};\nexport var gridSize = function gridSize() {\n  return 8;\n};\nexport var fontSize = function fontSize() {\n  return 14;\n};\nexport var fontSizeSmall = function fontSizeSmall() {\n  return 11;\n};\nexport var fontFamily = function fontFamily() {\n  return '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n};\nexport var codeFontFamily = function codeFontFamily() {\n  return '\"SFMono-Medium\", \"SF Mono\", \"Segoe UI Mono\", \"Roboto Mono\", \"Ubuntu Mono\", Menlo, Consolas, Courier, monospace';\n};\nexport var focusRing = function focusRing() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : colors.B100;\n  var outlineWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : gridSize() / 4;\n  return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \".concat(outlineWidth, \"px \").concat(color, \";\\n  }\\n\");\n};\nexport var noFocusRing = function noFocusRing() {\n  return \"\\n  box-shadow: none;\\n\";\n};\nexport var layers = {\n  card: function card() {\n    return 100;\n  },\n  dialog: function dialog() {\n    return 200;\n  },\n  navigation: function navigation() {\n    return 300;\n  },\n  layer: function layer() {\n    return 400;\n  },\n  blanket: function blanket() {\n    return 500;\n  },\n  modal: function modal() {\n    return 510;\n  },\n  flag: function flag() {\n    return 600;\n  },\n  spotlight: function spotlight() {\n    return 700;\n  },\n  tooltip: function tooltip() {\n    return 800;\n  }\n};\nexport var assistive = function assistive() {\n  return css([\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"]);\n}; // New API\n\nexport * from './components/Reset';\nexport { default } from './components/Theme';\nexport * from './hoc';\nexport * from './utils/createTheme';","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/inline-dialog/node_modules/@atlaskit/theme/dist/esm/index.js"],"names":["css","colors","elevation","typography","math","getTheme","themed","AtlaskitThemeProvider","default","Appearance","AtlasKitThemeProvider","borderRadius","gridSize","fontSize","fontSizeSmall","fontFamily","codeFontFamily","focusRing","color","arguments","length","undefined","B100","outlineWidth","concat","noFocusRing","layers","card","dialog","navigation","layer","blanket","modal","flag","spotlight","tooltip","assistive"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,SAASN,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,QAA9C,EAAwDC,MAAxD,EAAgEC,qBAAhE;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,yBAAtC,C,CAAiE;;AAEjE,OAAO,IAAIC,qBAAqB,GAAGH,qBAA5B;AACP;;;;;;AAMA,OAAO,IAAII,YAAY,GAAG,SAASA,YAAT,GAAwB;AAChD,SAAO,CAAP;AACD,CAFM;AAGP,OAAO,IAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACxC,SAAO,CAAP;AACD,CAFM;AAGP,OAAO,IAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACxC,SAAO,EAAP;AACD,CAFM;AAGP,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB;AAClD,SAAO,EAAP;AACD,CAFM;AAGP,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAT,GAAsB;AAC5C,SAAO,sIAAP;AACD,CAFM;AAGP,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,GAA0B;AACpD,SAAO,gHAAP;AACD,CAFM;AAGP,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC1C,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoElB,MAAM,CAACqB,IAAvF;AACA,MAAIC,YAAY,GAAGJ,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEP,QAAQ,KAAK,CAApG;AACA,SAAO,kEAAkEY,MAAlE,CAAyED,YAAzE,EAAuF,KAAvF,EAA8FC,MAA9F,CAAqGN,KAArG,EAA4G,UAA5G,CAAP;AACD,CAJM;AAKP,OAAO,IAAIO,WAAW,GAAG,SAASA,WAAT,GAAuB;AAC9C,SAAO,yBAAP;AACD,CAFM;AAGP,OAAO,IAAIC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO,GAAP;AACD,GAHiB;AAIlBC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAO,GAAP;AACD,GANiB;AAOlBC,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAO,GAAP;AACD,GATiB;AAUlBC,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,WAAO,GAAP;AACD,GAZiB;AAalBC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO,GAAP;AACD,GAfiB;AAgBlBC,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,WAAO,GAAP;AACD,GAlBiB;AAmBlBC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO,GAAP;AACD,GArBiB;AAsBlBC,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,WAAO,GAAP;AACD,GAxBiB;AAyBlBC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO,GAAP;AACD;AA3BiB,CAAb;AA6BP,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC1C,SAAOpC,GAAG,CAAC,CAAC,+PAAD,CAAD,CAAV;AACD,CAFM,C,CAEJ;;AAEH,cAAc,oBAAd;AACA,SAASQ,OAAT,QAAwB,oBAAxB;AACA,cAAc,OAAd;AACA,cAAc,qBAAd","sourcesContent":["import { css } from 'styled-components';\nimport * as colors from './colors';\nimport * as elevation from './elevation';\nimport * as typography from './typography';\nimport * as math from './utils/math';\nimport getTheme from './utils/getTheme';\nimport themed from './utils/themed';\nimport AtlaskitThemeProvider from './components/AtlaskitThemeProvider';\nexport { colors, elevation, typography, math, getTheme, themed, AtlaskitThemeProvider };\nexport { default as Appearance } from './components/Appearance'; // backwards-compatible export with old Atlaskit case\n\nexport var AtlasKitThemeProvider = AtlaskitThemeProvider;\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\n\nexport var borderRadius = function borderRadius() {\n  return 3;\n};\nexport var gridSize = function gridSize() {\n  return 8;\n};\nexport var fontSize = function fontSize() {\n  return 14;\n};\nexport var fontSizeSmall = function fontSizeSmall() {\n  return 11;\n};\nexport var fontFamily = function fontFamily() {\n  return '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n};\nexport var codeFontFamily = function codeFontFamily() {\n  return '\"SFMono-Medium\", \"SF Mono\", \"Segoe UI Mono\", \"Roboto Mono\", \"Ubuntu Mono\", Menlo, Consolas, Courier, monospace';\n};\nexport var focusRing = function focusRing() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : colors.B100;\n  var outlineWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : gridSize() / 4;\n  return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \".concat(outlineWidth, \"px \").concat(color, \";\\n  }\\n\");\n};\nexport var noFocusRing = function noFocusRing() {\n  return \"\\n  box-shadow: none;\\n\";\n};\nexport var layers = {\n  card: function card() {\n    return 100;\n  },\n  dialog: function dialog() {\n    return 200;\n  },\n  navigation: function navigation() {\n    return 300;\n  },\n  layer: function layer() {\n    return 400;\n  },\n  blanket: function blanket() {\n    return 500;\n  },\n  modal: function modal() {\n    return 510;\n  },\n  flag: function flag() {\n    return 600;\n  },\n  spotlight: function spotlight() {\n    return 700;\n  },\n  tooltip: function tooltip() {\n    return 800;\n  }\n};\nexport var assistive = function assistive() {\n  return css([\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"]);\n}; // New API\n\nexport * from './components/Reset';\nexport { default } from './components/Theme';\nexport * from './hoc';\nexport * from './utils/createTheme';"]},"metadata":{},"sourceType":"module"}