{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport { cleanProps } from '@atlaskit/analytics-next';\n/**\n * Styling a button is complicated and there are a number of properties which inform its appearance.\n * We want to be able to style any arbitrary component like a button, but we don't want to pass all\n * of these appearance-related props through to the component or underlying DOM node. This component\n * acts as a layer which catches the appearance-related properties so that they can be used by\n * styled-components, then passes the rest of the props on to the custom component.\n */\n\nvar CustomComponentProxy = function (_Component) {\n  _inherits(CustomComponentProxy, _Component);\n\n  function CustomComponentProxy() {\n    _classCallCheck(this, CustomComponentProxy);\n\n    return _possibleConstructorReturn(this, (CustomComponentProxy.__proto__ || _Object$getPrototypeOf(CustomComponentProxy)).apply(this, arguments));\n  }\n\n  _createClass(CustomComponentProxy, [{\n    key: 'render',\n    value: function render() {\n      var _cleanProps = cleanProps(this.props),\n          appearance = _cleanProps.appearance,\n          children = _cleanProps.children,\n          component = _cleanProps.component,\n          isActive = _cleanProps.isActive,\n          isDisabled = _cleanProps.isDisabled,\n          isFocus = _cleanProps.isFocus,\n          isHover = _cleanProps.isHover,\n          isSelected = _cleanProps.isSelected,\n          shouldFitContainer = _cleanProps.shouldFitContainer,\n          fit = _cleanProps.fit,\n          iconBefore = _cleanProps.iconBefore,\n          iconAfter = _cleanProps.iconAfter,\n          isLoading = _cleanProps.isLoading,\n          proxiedProps = _objectWithoutProperties(_cleanProps, ['appearance', 'children', 'component', 'isActive', 'isDisabled', 'isFocus', 'isHover', 'isSelected', 'shouldFitContainer', 'fit', 'iconBefore', 'iconAfter', 'isLoading']);\n\n      if (!component) throw new Error('No custom component provided while trying to use custom button component');\n      var ProxiedComponent = component;\n      return React.createElement(ProxiedComponent, proxiedProps, children);\n    }\n  }]);\n\n  return CustomComponentProxy;\n}(Component);\n\nexport default CustomComponentProxy;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/button/dist/esm/components/CustomComponentProxy.js"],"names":["_objectWithoutProperties","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Component","cleanProps","CustomComponentProxy","_Component","__proto__","apply","arguments","key","value","render","_cleanProps","props","appearance","children","component","isActive","isDisabled","isFocus","isHover","isSelected","shouldFitContainer","fit","iconBefore","iconAfter","isLoading","proxiedProps","Error","ProxiedComponent","createElement"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,+CAArC;AACA,OAAOC,sBAAP,MAAmC,+CAAnC;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA;;;;;;;;AAQA,IAAIC,oBAAoB,GAAG,UAAUC,UAAV,EAAsB;AAC/CL,EAAAA,SAAS,CAACI,oBAAD,EAAuBC,UAAvB,CAAT;;AAEA,WAASD,oBAAT,GAAgC;AAC9BP,IAAAA,eAAe,CAAC,IAAD,EAAOO,oBAAP,CAAf;;AAEA,WAAOL,0BAA0B,CAAC,IAAD,EAAO,CAACK,oBAAoB,CAACE,SAArB,IAAkCV,sBAAsB,CAACQ,oBAAD,CAAzD,EAAiFG,KAAjF,CAAuF,IAAvF,EAA6FC,SAA7F,CAAP,CAAjC;AACD;;AAEDV,EAAAA,YAAY,CAACM,oBAAD,EAAuB,CAAC;AAClCK,IAAAA,GAAG,EAAE,QAD6B;AAElCC,IAAAA,KAAK,EAAE,SAASC,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAGT,UAAU,CAAC,KAAKU,KAAN,CAA5B;AAAA,UACIC,UAAU,GAAGF,WAAW,CAACE,UAD7B;AAAA,UAEIC,QAAQ,GAAGH,WAAW,CAACG,QAF3B;AAAA,UAGIC,SAAS,GAAGJ,WAAW,CAACI,SAH5B;AAAA,UAIIC,QAAQ,GAAGL,WAAW,CAACK,QAJ3B;AAAA,UAKIC,UAAU,GAAGN,WAAW,CAACM,UAL7B;AAAA,UAMIC,OAAO,GAAGP,WAAW,CAACO,OAN1B;AAAA,UAOIC,OAAO,GAAGR,WAAW,CAACQ,OAP1B;AAAA,UAQIC,UAAU,GAAGT,WAAW,CAACS,UAR7B;AAAA,UASIC,kBAAkB,GAAGV,WAAW,CAACU,kBATrC;AAAA,UAUIC,GAAG,GAAGX,WAAW,CAACW,GAVtB;AAAA,UAWIC,UAAU,GAAGZ,WAAW,CAACY,UAX7B;AAAA,UAYIC,SAAS,GAAGb,WAAW,CAACa,SAZ5B;AAAA,UAaIC,SAAS,GAAGd,WAAW,CAACc,SAb5B;AAAA,UAcIC,YAAY,GAAGhC,wBAAwB,CAACiB,WAAD,EAAc,CAAC,YAAD,EAAe,UAAf,EAA2B,WAA3B,EAAwC,UAAxC,EAAoD,YAApD,EAAkE,SAAlE,EAA6E,SAA7E,EAAwF,YAAxF,EAAsG,oBAAtG,EAA4H,KAA5H,EAAmI,YAAnI,EAAiJ,WAAjJ,EAA8J,WAA9J,CAAd,CAd3C;;AAgBA,UAAI,CAACI,SAAL,EAAgB,MAAM,IAAIY,KAAJ,CAAU,0EAAV,CAAN;AAChB,UAAIC,gBAAgB,GAAGb,SAAvB;AACA,aAAOf,KAAK,CAAC6B,aAAN,CACLD,gBADK,EAELF,YAFK,EAGLZ,QAHK,CAAP;AAKD;AA1BiC,GAAD,CAAvB,CAAZ;;AA6BA,SAAOX,oBAAP;AACD,CAvC0B,CAuCzBF,SAvCyB,CAA3B;;AAyCA,eAAeE,oBAAf","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport { cleanProps } from '@atlaskit/analytics-next';\n\n/**\n * Styling a button is complicated and there are a number of properties which inform its appearance.\n * We want to be able to style any arbitrary component like a button, but we don't want to pass all\n * of these appearance-related props through to the component or underlying DOM node. This component\n * acts as a layer which catches the appearance-related properties so that they can be used by\n * styled-components, then passes the rest of the props on to the custom component.\n */\n\nvar CustomComponentProxy = function (_Component) {\n  _inherits(CustomComponentProxy, _Component);\n\n  function CustomComponentProxy() {\n    _classCallCheck(this, CustomComponentProxy);\n\n    return _possibleConstructorReturn(this, (CustomComponentProxy.__proto__ || _Object$getPrototypeOf(CustomComponentProxy)).apply(this, arguments));\n  }\n\n  _createClass(CustomComponentProxy, [{\n    key: 'render',\n    value: function render() {\n      var _cleanProps = cleanProps(this.props),\n          appearance = _cleanProps.appearance,\n          children = _cleanProps.children,\n          component = _cleanProps.component,\n          isActive = _cleanProps.isActive,\n          isDisabled = _cleanProps.isDisabled,\n          isFocus = _cleanProps.isFocus,\n          isHover = _cleanProps.isHover,\n          isSelected = _cleanProps.isSelected,\n          shouldFitContainer = _cleanProps.shouldFitContainer,\n          fit = _cleanProps.fit,\n          iconBefore = _cleanProps.iconBefore,\n          iconAfter = _cleanProps.iconAfter,\n          isLoading = _cleanProps.isLoading,\n          proxiedProps = _objectWithoutProperties(_cleanProps, ['appearance', 'children', 'component', 'isActive', 'isDisabled', 'isFocus', 'isHover', 'isSelected', 'shouldFitContainer', 'fit', 'iconBefore', 'iconAfter', 'isLoading']);\n\n      if (!component) throw new Error('No custom component provided while trying to use custom button component');\n      var ProxiedComponent = component;\n      return React.createElement(\n        ProxiedComponent,\n        proxiedProps,\n        children\n      );\n    }\n  }]);\n\n  return CustomComponentProxy;\n}(Component);\n\nexport default CustomComponentProxy;"]},"metadata":{},"sourceType":"module"}