{"ast":null,"code":"import styled, { keyframes } from 'styled-components';\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to use dynamic keyframes when we upgrade to styled components v2\n */\n\nvar keyframeNames = {\n  noop: keyframes([\"\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  \"]),\n  enterRotate: keyframes([\"\\n    from { transform: rotate(50deg); }\\n    to { transform: rotate(230deg); }\\n  \"]),\n  leaveRotate: keyframes([\"\\n    from { transform: rotate(230deg); }\\n    to { transform: rotate(510deg); }\\n  \"]),\n  leaveOpacity: keyframes([\"\\n    from { opacity: 1; }\\n    to { opacity: 0; }\\n  \"])\n};\nexport var getContainerAnimation = function getContainerAnimation(_ref) {\n  var delay = _ref.delay,\n      phase = _ref.phase;\n\n  if (phase === 'DELAY') {\n    /* This hides the spinner and allows us to use animationend events to move to the next phase in\n     * the same way we do with the other lifecycle stages */\n    return \"animation: \".concat(delay, \"s \").concat(keyframeNames.noop, \";\");\n  }\n\n  if (phase === 'ENTER' || phase === 'IDLE') {\n    return \"animation: 1s ease-in-out forwards \".concat(keyframeNames.enterRotate, \";\");\n  }\n\n  if (phase === 'LEAVE') {\n    return \"animation: 0.53s ease-in-out forwards \".concat(keyframeNames.leaveRotate, \",\\n      0.2s ease-in-out 0.33s \").concat(keyframeNames.leaveOpacity, \";\");\n  }\n\n  return '';\n};\n\nvar getSize = function getSize(_ref2) {\n  var size = _ref2.size;\n  return \"\".concat(size, \"px\");\n};\n\nvar Container = styled.div.withConfig({\n  displayName: \"styledContainer__Container\",\n  componentId: \"sc-1qs8wxp-0\"\n})([\"\\n  \", \" display: flex;\\n  height: \", \";\\n  width: \", \";\\n\\n  /* Rapidly creating and removing spinners will result in multiple spinners being visible while\\n   * they complete their exit animations. This rules hides the spinner if another one has been\\n   * added. */\\n  div + & {\\n    display: none;\\n  }\\n\"], getContainerAnimation, getSize, getSize);\nContainer.displayName = 'SpinnerContainer';\nexport default Container;","map":{"version":3,"sources":["/Users/niharikatomar/Desktop/rr/restaurant-roulette/frontend/node_modules/@atlaskit/field-base/node_modules/@atlaskit/spinner/dist/esm/Spinner/styledContainer.js"],"names":["styled","keyframes","keyframeNames","noop","enterRotate","leaveRotate","leaveOpacity","getContainerAnimation","_ref","delay","phase","concat","getSize","_ref2","size","Container","div","withConfig","displayName","componentId"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA;;;;;;AAKA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAEF,SAAS,CAAC,CAAC,wDAAD,CAAD,CADG;AAElBG,EAAAA,WAAW,EAAEH,SAAS,CAAC,CAAC,qFAAD,CAAD,CAFJ;AAGlBI,EAAAA,WAAW,EAAEJ,SAAS,CAAC,CAAC,sFAAD,CAAD,CAHJ;AAIlBK,EAAAA,YAAY,EAAEL,SAAS,CAAC,CAAC,wDAAD,CAAD;AAJL,CAApB;AAMA,OAAO,IAAIM,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AACtE,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;;AAGA,MAAIA,KAAK,KAAK,OAAd,EAAuB;AACrB;;AAEA,WAAO,cAAcC,MAAd,CAAqBF,KAArB,EAA4B,IAA5B,EAAkCE,MAAlC,CAAyCT,aAAa,CAACC,IAAvD,EAA6D,GAA7D,CAAP;AACD;;AAED,MAAIO,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,MAAnC,EAA2C;AACzC,WAAO,sCAAsCC,MAAtC,CAA6CT,aAAa,CAACE,WAA3D,EAAwE,GAAxE,CAAP;AACD;;AAED,MAAIM,KAAK,KAAK,OAAd,EAAuB;AACrB,WAAO,yCAAyCC,MAAzC,CAAgDT,aAAa,CAACG,WAA9D,EAA2E,kCAA3E,EAA+GM,MAA/G,CAAsHT,aAAa,CAACI,YAApI,EAAkJ,GAAlJ,CAAP;AACD;;AAED,SAAO,EAAP;AACD,CAnBM;;AAqBP,IAAIM,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpC,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,SAAO,GAAGH,MAAH,CAAUG,IAAV,EAAgB,IAAhB,CAAP;AACD,CAHD;;AAKA,IAAIC,SAAS,GAAGf,MAAM,CAACgB,GAAP,CAAWC,UAAX,CAAsB;AACpCC,EAAAA,WAAW,EAAE,4BADuB;AAEpCC,EAAAA,WAAW,EAAE;AAFuB,CAAtB,EAGb,CAAC,MAAD,EAAS,6BAAT,EAAwC,cAAxC,EAAwD,+PAAxD,CAHa,EAG6SZ,qBAH7S,EAGoUK,OAHpU,EAG6UA,OAH7U,CAAhB;AAIAG,SAAS,CAACG,WAAV,GAAwB,kBAAxB;AACA,eAAeH,SAAf","sourcesContent":["import styled, { keyframes } from 'styled-components';\n\n/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function\n * does not cache previous values resulting in each spinner injecting the same keyframe definition\n * in the DOM.\n * This can be reverted to use dynamic keyframes when we upgrade to styled components v2\n */\nvar keyframeNames = {\n  noop: keyframes([\"\\n    from { opacity: 0; }\\n    to { opacity: 0; }\\n  \"]),\n  enterRotate: keyframes([\"\\n    from { transform: rotate(50deg); }\\n    to { transform: rotate(230deg); }\\n  \"]),\n  leaveRotate: keyframes([\"\\n    from { transform: rotate(230deg); }\\n    to { transform: rotate(510deg); }\\n  \"]),\n  leaveOpacity: keyframes([\"\\n    from { opacity: 1; }\\n    to { opacity: 0; }\\n  \"])\n};\nexport var getContainerAnimation = function getContainerAnimation(_ref) {\n  var delay = _ref.delay,\n      phase = _ref.phase;\n\n  if (phase === 'DELAY') {\n    /* This hides the spinner and allows us to use animationend events to move to the next phase in\n     * the same way we do with the other lifecycle stages */\n    return \"animation: \".concat(delay, \"s \").concat(keyframeNames.noop, \";\");\n  }\n\n  if (phase === 'ENTER' || phase === 'IDLE') {\n    return \"animation: 1s ease-in-out forwards \".concat(keyframeNames.enterRotate, \";\");\n  }\n\n  if (phase === 'LEAVE') {\n    return \"animation: 0.53s ease-in-out forwards \".concat(keyframeNames.leaveRotate, \",\\n      0.2s ease-in-out 0.33s \").concat(keyframeNames.leaveOpacity, \";\");\n  }\n\n  return '';\n};\n\nvar getSize = function getSize(_ref2) {\n  var size = _ref2.size;\n  return \"\".concat(size, \"px\");\n};\n\nvar Container = styled.div.withConfig({\n  displayName: \"styledContainer__Container\",\n  componentId: \"sc-1qs8wxp-0\"\n})([\"\\n  \", \" display: flex;\\n  height: \", \";\\n  width: \", \";\\n\\n  /* Rapidly creating and removing spinners will result in multiple spinners being visible while\\n   * they complete their exit animations. This rules hides the spinner if another one has been\\n   * added. */\\n  div + & {\\n    display: none;\\n  }\\n\"], getContainerAnimation, getSize, getSize);\nContainer.displayName = 'SpinnerContainer';\nexport default Container;"]},"metadata":{},"sourceType":"module"}